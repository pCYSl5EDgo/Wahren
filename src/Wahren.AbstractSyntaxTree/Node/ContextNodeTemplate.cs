#nullable enable
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY T4. DO NOT CHANGE IT. CHANGE THE .tt FILE INSTEAD.
// </auto-generated>
using System.Buffers.Binary;
using System.Runtime.InteropServices;

namespace Wahren.AbstractSyntaxTree.Node;

public sealed class ContextNode : INode
{
    public uint Kind { get; set; }
    public uint BracketLeft { get; set; }
    public uint BracketRight { get; set; }

    public StringSpanKeyDictionary<Pair_NullableString_NullableInt_ArrayElement> Others = new();
    public Pair_NullableString_NullableInt_ArrayElement? _war;
    public Pair_NullableString_NullableInt_ArrayElement? camp;
    public Pair_NullableString_NullableInt_ArrayElement? _help;
    public Pair_NullableString_NullableInt_ArrayElement? _load;
    public Pair_NullableString_NullableInt_ArrayElement? _menu;
    public Pair_NullableString_NullableInt_ArrayElement? _name;
    public Pair_NullableString_NullableInt_ArrayElement? _save;
    public Pair_NullableString_NullableInt_ArrayElement? _spot;
    public Pair_NullableString_NullableInt_ArrayElement? _tool;
    public Pair_NullableString_NullableInt_ArrayElement? _war2;
    public Pair_NullableString_NullableInt_ArrayElement? bloom;
    public Pair_NullableString_NullableInt_ArrayElement? _corps;
    public Pair_NullableString_NullableInt_ArrayElement? _diplo;
    public Pair_NullableString_NullableInt_ArrayElement? _help2;
    public Pair_NullableString_NullableInt_ArrayElement? _load2;
    public Pair_NullableString_NullableInt_ArrayElement? _menu2;
    public Pair_NullableString_NullableInt_ArrayElement? _merce;
    public Pair_NullableString_NullableInt_ArrayElement? _name2;
    public Pair_NullableString_NullableInt_ArrayElement? _save2;
    public Pair_NullableString_NullableInt_ArrayElement? _spot2;
    public Pair_NullableString_NullableInt_ArrayElement? _tool2;
    public Pair_NullableString_NullableInt_ArrayElement? discus;
    public Pair_NullableString_NullableInt_ArrayElement? font10;
    public Pair_NullableString_NullableInt_ArrayElement? font12;
    public Pair_NullableString_NullableInt_ArrayElement? font14;
    public Pair_NullableString_NullableInt_ArrayElement? font16;
    public Pair_NullableString_NullableInt_ArrayElement? font20;
    public Pair_NullableString_NullableInt_ArrayElement? member;
    public Pair_NullableString_NullableInt_ArrayElement? _battle;
    public Pair_NullableString_NullableInt_ArrayElement? _corps2;
    public Pair_NullableString_NullableInt_ArrayElement? _detail;
    public Pair_NullableString_NullableInt_ArrayElement? _dialog;
    public Pair_NullableString_NullableInt_ArrayElement? _diplo2;
    public Pair_NullableString_NullableInt_ArrayElement? _merce2;
    public Pair_NullableString_NullableInt_ArrayElement? _spot22;
    public Pair_NullableString_NullableInt_ArrayElement? _status;
    public Pair_NullableString_NullableInt_ArrayElement? _battle2;
    public Pair_NullableString_NullableInt_ArrayElement? _bstatus;
    public Pair_NullableString_NullableInt_ArrayElement? _commenu;
    public Pair_NullableString_NullableInt_ArrayElement? _detail2;
    public Pair_NullableString_NullableInt_ArrayElement? _dialog2;
    public Pair_NullableString_NullableInt_ArrayElement? _message;
    public Pair_NullableString_NullableInt_ArrayElement? _status2;
    public Pair_NullableString_NullableInt_ArrayElement? btl_auto;
    public Pair_NullableString_NullableInt_ArrayElement? gain_per;
    public Pair_NullableString_NullableInt_ArrayElement? loyal_up;
    public Pair_NullableString_NullableInt_ArrayElement? max_unit;
    public Pair_NullableString_NullableInt_ArrayElement? my_range;
    public Pair_NullableString_NullableInt_ArrayElement? npm_play;
    public Pair_NullableString_NullableInt_ArrayElement? politics;
    public Pair_NullableString_NullableInt_ArrayElement? raid_bdr;
    public Pair_NullableString_NullableInt_ArrayElement? raid_coe;
    public Pair_NullableString_NullableInt_ArrayElement? raid_max;
    public Pair_NullableString_NullableInt_ArrayElement? raid_min;
    public Pair_NullableString_NullableInt_ArrayElement? ring_red;
    public Pair_NullableString_NullableInt_ArrayElement? trust_up;
    public Pair_NullableString_NullableInt_ArrayElement? win_gain;
    public Pair_NullableString_NullableInt_ArrayElement? _bstatus2;
    public Pair_NullableString_NullableInt_ArrayElement? _commenu2;
    public Pair_NullableString_NullableInt_ArrayElement? _heromenu;
    public Pair_NullableString_NullableInt_ArrayElement? _message2;
    public Pair_NullableString_NullableInt_ArrayElement? _scenario;
    public Pair_NullableString_NullableInt_ArrayElement? actor_per;
    public Pair_NullableString_NullableInt_ArrayElement? btl_limit;
    public Pair_NullableString_NullableInt_ArrayElement? color_red;
    public Pair_NullableString_NullableInt_ArrayElement? font_face;
    public Pair_NullableString_NullableInt_ArrayElement? font_file;
    public Pair_NullableString_NullableInt_ArrayElement? font_text;
    public Pair_NullableString_NullableInt_ArrayElement? fv_hp_per;
    public Pair_NullableString_NullableInt_ArrayElement? fv_mp_per;
    public Pair_NullableString_NullableInt_ArrayElement? mode_easy;
    public Pair_NullableString_NullableInt_ArrayElement? mode_hard;
    public Pair_NullableString_NullableInt_ArrayElement? mode_luna;
    public Pair_NullableString_NullableInt_ArrayElement? narabijun;
    public Pair_NullableString_NullableInt_ArrayElement? ring_blue;
    public Pair_NullableString_NullableInt_ArrayElement? ring_cyan;
    public Pair_NullableString_NullableInt_ArrayElement? title_bgm;
    public Pair_NullableString_NullableInt_ArrayElement? wnd_alpha;
    public Pair_NullableString_NullableInt_ArrayElement? world_bgm;
    public Pair_NullableString_NullableInt_ArrayElement? _heromenu2;
    public Pair_NullableString_NullableInt_ArrayElement? _powerinfo;
    public Pair_NullableString_NullableInt_ArrayElement? _scenario2;
    public Pair_NullableString_NullableInt_ArrayElement? battle_bgm;
    public Pair_NullableString_NullableInt_ArrayElement? bgm_volume;
    public Pair_NullableString_NullableInt_ArrayElement? btl_healer;
    public Pair_NullableString_NullableInt_ArrayElement? cavalry_ai;
    public Pair_NullableString_NullableInt_ArrayElement? color_blue;
    public Pair_NullableString_NullableInt_ArrayElement? color_cyan;
    public Pair_NullableString_NullableInt_ArrayElement? color_name;
    public Pair_NullableString_NullableInt_ArrayElement? color_text;
    public Pair_NullableString_NullableInt_ArrayElement? damage_max;
    public Pair_NullableString_NullableInt_ArrayElement? damage_min;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_down;
    public Pair_NullableString_NullableInt_ArrayElement? font_title;
    public Pair_NullableString_NullableInt_ArrayElement? force_fire;
    public Pair_NullableString_NullableInt_ArrayElement? free_raise;
    public Pair_NullableString_NullableInt_ArrayElement? loyal_down;
    public Pair_NullableString_NullableInt_ArrayElement? quota_view;
    public Pair_NullableString_NullableInt_ArrayElement? race_label;
    public Pair_NullableString_NullableInt_ArrayElement? ring_alpha;
    public Pair_NullableString_NullableInt_ArrayElement? ring_green;
    public Pair_NullableString_NullableInt_ArrayElement? roam_avoid;
    public Pair_NullableString_NullableInt_ArrayElement? senior_bdr;
    public Pair_NullableString_NullableInt_ArrayElement? spot_fire1;
    public Pair_NullableString_NullableInt_ArrayElement? spot_fire2;
    public Pair_NullableString_NullableInt_ArrayElement? spot_route;
    public Pair_NullableString_NullableInt_ArrayElement? title_name;
    public Pair_NullableString_NullableInt_ArrayElement? wnd_button;
    public Pair_NullableString_NullableInt_ArrayElement? wskin_cell;
    public Pair_NullableString_NullableInt_ArrayElement? zone_alpha;
    public Pair_NullableString_NullableInt_ArrayElement? _personinfo;
    public Pair_NullableString_NullableInt_ArrayElement? _powerinfo2;
    public Pair_NullableString_NullableInt_ArrayElement? arbeit_gain;
    public Pair_NullableString_NullableInt_ArrayElement? arbeit_turn;
    public Pair_NullableString_NullableInt_ArrayElement? battle_fast;
    public Pair_NullableString_NullableInt_ArrayElement? btl_counter;
    public Pair_NullableString_NullableInt_ArrayElement? btl_limit_c;
    public Pair_NullableString_NullableInt_ArrayElement? btl_minimap;
    public Pair_NullableString_NullableInt_ArrayElement? btl_msgtime;
    public Pair_NullableString_NullableInt_ArrayElement? btl_slowper;
    public Pair_NullableString_NullableInt_ArrayElement? btl_standby;
    public Pair_NullableString_NullableInt_ArrayElement? btl_unitmax;
    public Pair_NullableString_NullableInt_ArrayElement? btl_wingmax;
    public Pair_NullableString_NullableInt_ArrayElement? color_green;
    public Pair_NullableString_NullableInt_ArrayElement? color_white;
    public Pair_NullableString_NullableInt_ArrayElement? compati_bad;
    public Pair_NullableString_NullableInt_ArrayElement? damage_max2;
    public Pair_NullableString_NullableInt_ArrayElement? damage_min2;
    public Pair_NullableString_NullableInt_ArrayElement? font_detail;
    public Pair_NullableString_NullableInt_ArrayElement? fv_move_per;
    public Pair_NullableString_NullableInt_ArrayElement? item_window;
    public Pair_NullableString_NullableInt_ArrayElement? mode_normal;
    public Pair_NullableString_NullableInt_ArrayElement? neutral_max;
    public Pair_NullableString_NullableInt_ArrayElement? neutral_min;
    public Pair_NullableString_NullableInt_ArrayElement? power_order;
    public Pair_NullableString_NullableInt_ArrayElement? race_suffix;
    public Pair_NullableString_NullableInt_ArrayElement? ring_orange;
    public Pair_NullableString_NullableInt_ArrayElement? ring_purple;
    public Pair_NullableString_NullableInt_ArrayElement? ring_yellow;
    public Pair_NullableString_NullableInt_ArrayElement? senior_cost;
    public Pair_NullableString_NullableInt_ArrayElement? sound_count;
    public Pair_NullableString_NullableInt_ArrayElement? talent_mode;
    public Pair_NullableString_NullableInt_ArrayElement? title_bgm_s;
    public Pair_NullableString_NullableInt_ArrayElement? unit_vanish;
    public Pair_NullableString_NullableInt_ArrayElement? zone_radius;
    public Pair_NullableString_NullableInt_ArrayElement? _personinfo2;
    public Pair_NullableString_NullableInt_ArrayElement? _powerselect;
    public Pair_NullableString_NullableInt_ArrayElement? btl_mode_coe;
    public Pair_NullableString_NullableInt_ArrayElement? btl_raidback;
    public Pair_NullableString_NullableInt_ArrayElement? btl_semiauto;
    public Pair_NullableString_NullableInt_ArrayElement? color_orange;
    public Pair_NullableString_NullableInt_ArrayElement? color_yellow;
    public Pair_NullableString_NullableInt_ArrayElement? dead_penalty;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_frd_up;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_sup_up;
    public Pair_NullableString_NullableInt_ArrayElement? employ_range;
    public Pair_NullableString_NullableInt_ArrayElement? font_balloon;
    public Pair_NullableString_NullableInt_ArrayElement? foreign_test;
    public Pair_NullableString_NullableInt_ArrayElement? fv_hprec_per;
    public Pair_NullableString_NullableInt_ArrayElement? fv_level_per;
    public Pair_NullableString_NullableInt_ArrayElement? fv_speed_per;
    public Pair_NullableString_NullableInt_ArrayElement? leave_period;
    public Pair_NullableString_NullableInt_ArrayElement? loyal_border;
    public Pair_NullableString_NullableInt_ArrayElement? merits_bonus;
    public Pair_NullableString_NullableInt_ArrayElement? movement_num;
    public Pair_NullableString_NullableInt_ArrayElement? myhelp_range;
    public Pair_NullableString_NullableInt_ArrayElement? picture_fade;
    public Pair_NullableString_NullableInt_ArrayElement? quarter_view;
    public Pair_NullableString_NullableInt_ArrayElement? skill_offset;
    public Pair_NullableString_NullableInt_ArrayElement? sound_volume;
    public Pair_NullableString_NullableInt_ArrayElement? support_gain;
    public Pair_NullableString_NullableInt_ArrayElement? title_volume;
    public Pair_NullableString_NullableInt_ArrayElement? trust_morale;
    public Pair_NullableString_NullableInt_ArrayElement? unicode_test;
    public Pair_NullableString_NullableInt_ArrayElement? unit_use_coe;
    public Pair_NullableString_NullableInt_ArrayElement? war_capacity;
    public Pair_NullableString_NullableInt_ArrayElement? world_volume;
    public Pair_NullableString_NullableInt_ArrayElement? _personselect;
    public Pair_NullableString_NullableInt_ArrayElement? _powerselect2;
    public Pair_NullableString_NullableInt_ArrayElement? _scenariotext;
    public Pair_NullableString_NullableInt_ArrayElement? arbeit_player;
    public Pair_NullableString_NullableInt_ArrayElement? b_sound_count;
    public Pair_NullableString_NullableInt_ArrayElement? battle_volume;
    public Pair_NullableString_NullableInt_ArrayElement? bold_spotpath;
    public Pair_NullableString_NullableInt_ArrayElement? btl_intercept;
    public Pair_NullableString_NullableInt_ArrayElement? btl_lineshift;
    public Pair_NullableString_NullableInt_ArrayElement? btl_minimap_w;
    public Pair_NullableString_NullableInt_ArrayElement? color_detail1;
    public Pair_NullableString_NullableInt_ArrayElement? color_detail2;
    public Pair_NullableString_NullableInt_ArrayElement? color_detail3;
    public Pair_NullableString_NullableInt_ArrayElement? color_magenta;
    public Pair_NullableString_NullableInt_ArrayElement? damage_consti;
    public Pair_NullableString_NullableInt_ArrayElement? event_bg_size;
    public Pair_NullableString_NullableInt_ArrayElement? executive_bdr;
    public Pair_NullableString_NullableInt_ArrayElement? face_colorkey;
    public Pair_NullableString_NullableInt_ArrayElement? font_prologue;
    public Pair_NullableString_NullableInt_ArrayElement? fv_attack_per;
    public Pair_NullableString_NullableInt_ArrayElement? fv_consti_mul;
    public Pair_NullableString_NullableInt_ArrayElement? fv_summon_mul;
    public Pair_NullableString_NullableInt_ArrayElement? item_sell_per;
    public Pair_NullableString_NullableInt_ArrayElement? newpower_flag;
    public Pair_NullableString_NullableInt_ArrayElement? notalent_down;
    public Pair_NullableString_NullableInt_ArrayElement? picture_floor;
    public Pair_NullableString_NullableInt_ArrayElement? picture_trans;
    public Pair_NullableString_NullableInt_ArrayElement? skillicon_add;
    public Pair_NullableString_NullableInt_ArrayElement? skillicon_all;
    public Pair_NullableString_NullableInt_ArrayElement? spot_capacity;
    public Pair_NullableString_NullableInt_ArrayElement? support_range;
    public Pair_NullableString_NullableInt_ArrayElement? unit_scream_m;
    public Pair_NullableString_NullableInt_ArrayElement? unit_scream_n;
    public Pair_NullableString_NullableInt_ArrayElement? unit_slow_per;
    public Pair_NullableString_NullableInt_ArrayElement? _personselect2;
    public Pair_NullableString_NullableInt_ArrayElement? _scenariotext2;
    public Pair_NullableString_NullableInt_ArrayElement? b_sound_volume;
    public Pair_NullableString_NullableInt_ArrayElement? bold_spotlabel;
    public Pair_NullableString_NullableInt_ArrayElement? btl_attackmode;
    public Pair_NullableString_NullableInt_ArrayElement? btl_battlemode;
    public Pair_NullableString_NullableInt_ArrayElement? btl_castle_lot;
    public Pair_NullableString_NullableInt_ArrayElement? btl_chargemode;
    public Pair_NullableString_NullableInt_ArrayElement? btl_min_damage;
    public Pair_NullableString_NullableInt_ArrayElement? caution_adjust;
    public Pair_NullableString_NullableInt_ArrayElement? color_namehelp;
    public Pair_NullableString_NullableInt_ArrayElement? color_prologue;
    public Pair_NullableString_NullableInt_ArrayElement? default_ending;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_cost_per;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_frd_down;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_mode_itv;
    public Pair_NullableString_NullableInt_ArrayElement? executive_cost;
    public Pair_NullableString_NullableInt_ArrayElement? font_spotlabel;
    public Pair_NullableString_NullableInt_ArrayElement? font_text_size;
    public Pair_NullableString_NullableInt_ArrayElement? fullbody_speak;
    public Pair_NullableString_NullableInt_ArrayElement? mode_easy_text;
    public Pair_NullableString_NullableInt_ArrayElement? mode_hard_text;
    public Pair_NullableString_NullableInt_ArrayElement? mode_luna_text;
    public Pair_NullableString_NullableInt_ArrayElement? picture_center;
    public Pair_NullableString_NullableInt_ArrayElement? raise_yabo_bdr;
    public Pair_NullableString_NullableInt_ArrayElement? skillicon_item;
    public Pair_NullableString_NullableInt_ArrayElement? t_sound_volume;
    public Pair_NullableString_NullableInt_ArrayElement? target_way_coe;
    public Pair_NullableString_NullableInt_ArrayElement? title_menu_top;
    public Pair_NullableString_NullableInt_ArrayElement? trust_down_per;
    public Pair_NullableString_NullableInt_ArrayElement? unit_drain_mul;
    public Pair_NullableString_NullableInt_ArrayElement? unit_keep_form;
    public Pair_NullableString_NullableInt_ArrayElement? unit_level_max;
    public Pair_NullableString_NullableInt_ArrayElement? unit_status_hp;
    public Pair_NullableString_NullableInt_ArrayElement? b_sound_itv_max;
    public Pair_NullableString_NullableInt_ArrayElement? b_sound_itv_min;
    public Pair_NullableString_NullableInt_ArrayElement? bold_escapepath;
    public Pair_NullableString_NullableInt_ArrayElement? btl_blind_alpha;
    public Pair_NullableString_NullableInt_ArrayElement? btl_prepare_max;
    public Pair_NullableString_NullableInt_ArrayElement? btl_prepare_min;
    public Pair_NullableString_NullableInt_ArrayElement? btl_retreat_coe;
    public Pair_NullableString_NullableInt_ArrayElement? color_spotlabel;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_frd_peace;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_league_up;
    public Pair_NullableString_NullableInt_ArrayElement? fullbody_detail;
    public Pair_NullableString_NullableInt_ArrayElement? unit_action_bdr;
    public Pair_NullableString_NullableInt_ArrayElement? unit_escape_run;
    public Pair_NullableString_NullableInt_ArrayElement? unit_hand_range;
    public Pair_NullableString_NullableInt_ArrayElement? unit_keep_color;
    public Pair_NullableString_NullableInt_ArrayElement? unit_poison_per;
    public Pair_NullableString_NullableInt_ArrayElement? unit_search_bdr;
    public Pair_NullableString_NullableInt_ArrayElement? unit_status_min;
    public Pair_NullableString_NullableInt_ArrayElement? unit_status_rec;
    public Pair_NullableString_NullableInt_ArrayElement? unit_suck_limit;
    public Pair_NullableString_NullableInt_ArrayElement? unit_summon_min;
    public Pair_NullableString_NullableInt_ArrayElement? unit_view_range;
    public Pair_NullableString_NullableInt_ArrayElement? watching_replay;
    public Pair_NullableString_NullableInt_ArrayElement? arbeit_gain_lose;
    public Pair_NullableString_NullableInt_ArrayElement? arbeit_price_coe;
    public Pair_NullableString_NullableInt_ArrayElement? btl_breast_width;
    public Pair_NullableString_NullableInt_ArrayElement? btl_gate_through;
    public Pair_NullableString_NullableInt_ArrayElement? btl_nocastle_bdr;
    public Pair_NullableString_NullableInt_ArrayElement? btl_replace_line;
    public Pair_NullableString_NullableInt_ArrayElement? circle_alpha_per;
    public Pair_NullableString_NullableInt_ArrayElement? color_spotlabel2;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_bestfriend;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_budget_per;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_most_power;
    public Pair_NullableString_NullableInt_ArrayElement? employ_price_coe;
    public Pair_NullableString_NullableInt_ArrayElement? loyal_escape_bdr;
    public Pair_NullableString_NullableInt_ArrayElement? mode_normal_text;
    public Pair_NullableString_NullableInt_ArrayElement? raise_most_power;
    public Pair_NullableString_NullableInt_ArrayElement? scenario_select2;
    public Pair_NullableString_NullableInt_ArrayElement? skillicon_assist;
    public Pair_NullableString_NullableInt_ArrayElement? skillicon_leader;
    public Pair_NullableString_NullableInt_ArrayElement? title_menu_right;
    public Pair_NullableString_NullableInt_ArrayElement? title_menu_space;
    public Pair_NullableString_NullableInt_ArrayElement? training_average;
    public Pair_NullableString_NullableInt_ArrayElement? unit_battle_cram;
    public Pair_NullableString_NullableInt_ArrayElement? unit_castle_cram;
    public Pair_NullableString_NullableInt_ArrayElement? unit_image_right;
    public Pair_NullableString_NullableInt_ArrayElement? unit_knock_speed;
    public Pair_NullableString_NullableInt_ArrayElement? unit_sword_slide;
    public Pair_NullableString_NullableInt_ArrayElement? vassal_price_coe;
    public Pair_NullableString_NullableInt_ArrayElement? arbeit_money_mini;
    public Pair_NullableString_NullableInt_ArrayElement? arbeit_vassal_coe;
    public Pair_NullableString_NullableInt_ArrayElement? b_sound_no_repeat;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_success_frd;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_success_leg;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_success_sup;
    public Pair_NullableString_NullableInt_ArrayElement? skillicon_special;
    public Pair_NullableString_NullableInt_ArrayElement? spot_escape_route;
    public Pair_NullableString_NullableInt_ArrayElement? support_gain_lose;
    public Pair_NullableString_NullableInt_ArrayElement? support_trust_bdr;
    public Pair_NullableString_NullableInt_ArrayElement? unit_attack_range;
    public Pair_NullableString_NullableInt_ArrayElement? unit_charge_slide;
    public Pair_NullableString_NullableInt_ArrayElement? unit_element_heal;
    public Pair_NullableString_NullableInt_ArrayElement? unit_escape_range;
    public Pair_NullableString_NullableInt_ArrayElement? unit_status_death;
    public Pair_NullableString_NullableInt_ArrayElement? unit_summon_level;
    public Pair_NullableString_NullableInt_ArrayElement? compati_vassal_bdr;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_frd_turndown;
    public Pair_NullableString_NullableInt_ArrayElement? diplo_sup_turndown;
    public Pair_NullableString_NullableInt_ArrayElement? neutral_member_max;
    public Pair_NullableString_NullableInt_ArrayElement? neutral_member_min;
    public Pair_NullableString_NullableInt_ArrayElement? trust_down_support;
    public Pair_NullableString_NullableInt_ArrayElement? unit_illusion_miss;
    public Pair_NullableString_NullableInt_ArrayElement? unit_missile_slide;
    public Pair_NullableString_NullableInt_ArrayElement? unit_retreat_speed;
    public Pair_NullableString_NullableInt_ArrayElement? unit_confusion_miss;
    public Pair_NullableString_NullableInt_ArrayElement? unit_lifebar_height;
    public Pair_NullableString_NullableInt_ArrayElement? unit_retreat_damage;
    public Pair_NullableString_NullableInt_ArrayElement? unit_specialuse_per;
    public Pair_NullableString_NullableInt_ArrayElement? unit_castle_forcefire;
    public void Dispose()
    {
        Others.Dispose();
        _war = null;
        camp = null;
        _help = null;
        _load = null;
        _menu = null;
        _name = null;
        _save = null;
        _spot = null;
        _tool = null;
        _war2 = null;
        bloom = null;
        _corps = null;
        _diplo = null;
        _help2 = null;
        _load2 = null;
        _menu2 = null;
        _merce = null;
        _name2 = null;
        _save2 = null;
        _spot2 = null;
        _tool2 = null;
        discus = null;
        font10 = null;
        font12 = null;
        font14 = null;
        font16 = null;
        font20 = null;
        member = null;
        _battle = null;
        _corps2 = null;
        _detail = null;
        _dialog = null;
        _diplo2 = null;
        _merce2 = null;
        _spot22 = null;
        _status = null;
        _battle2 = null;
        _bstatus = null;
        _commenu = null;
        _detail2 = null;
        _dialog2 = null;
        _message = null;
        _status2 = null;
        btl_auto = null;
        gain_per = null;
        loyal_up = null;
        max_unit = null;
        my_range = null;
        npm_play = null;
        politics = null;
        raid_bdr = null;
        raid_coe = null;
        raid_max = null;
        raid_min = null;
        ring_red = null;
        trust_up = null;
        win_gain = null;
        _bstatus2 = null;
        _commenu2 = null;
        _heromenu = null;
        _message2 = null;
        _scenario = null;
        actor_per = null;
        btl_limit = null;
        color_red = null;
        font_face = null;
        font_file = null;
        font_text = null;
        fv_hp_per = null;
        fv_mp_per = null;
        mode_easy = null;
        mode_hard = null;
        mode_luna = null;
        narabijun = null;
        ring_blue = null;
        ring_cyan = null;
        title_bgm = null;
        wnd_alpha = null;
        world_bgm = null;
        _heromenu2 = null;
        _powerinfo = null;
        _scenario2 = null;
        battle_bgm = null;
        bgm_volume = null;
        btl_healer = null;
        cavalry_ai = null;
        color_blue = null;
        color_cyan = null;
        color_name = null;
        color_text = null;
        damage_max = null;
        damage_min = null;
        diplo_down = null;
        font_title = null;
        force_fire = null;
        free_raise = null;
        loyal_down = null;
        quota_view = null;
        race_label = null;
        ring_alpha = null;
        ring_green = null;
        roam_avoid = null;
        senior_bdr = null;
        spot_fire1 = null;
        spot_fire2 = null;
        spot_route = null;
        title_name = null;
        wnd_button = null;
        wskin_cell = null;
        zone_alpha = null;
        _personinfo = null;
        _powerinfo2 = null;
        arbeit_gain = null;
        arbeit_turn = null;
        battle_fast = null;
        btl_counter = null;
        btl_limit_c = null;
        btl_minimap = null;
        btl_msgtime = null;
        btl_slowper = null;
        btl_standby = null;
        btl_unitmax = null;
        btl_wingmax = null;
        color_green = null;
        color_white = null;
        compati_bad = null;
        damage_max2 = null;
        damage_min2 = null;
        font_detail = null;
        fv_move_per = null;
        item_window = null;
        mode_normal = null;
        neutral_max = null;
        neutral_min = null;
        power_order = null;
        race_suffix = null;
        ring_orange = null;
        ring_purple = null;
        ring_yellow = null;
        senior_cost = null;
        sound_count = null;
        talent_mode = null;
        title_bgm_s = null;
        unit_vanish = null;
        zone_radius = null;
        _personinfo2 = null;
        _powerselect = null;
        btl_mode_coe = null;
        btl_raidback = null;
        btl_semiauto = null;
        color_orange = null;
        color_yellow = null;
        dead_penalty = null;
        diplo_frd_up = null;
        diplo_sup_up = null;
        employ_range = null;
        font_balloon = null;
        foreign_test = null;
        fv_hprec_per = null;
        fv_level_per = null;
        fv_speed_per = null;
        leave_period = null;
        loyal_border = null;
        merits_bonus = null;
        movement_num = null;
        myhelp_range = null;
        picture_fade = null;
        quarter_view = null;
        skill_offset = null;
        sound_volume = null;
        support_gain = null;
        title_volume = null;
        trust_morale = null;
        unicode_test = null;
        unit_use_coe = null;
        war_capacity = null;
        world_volume = null;
        _personselect = null;
        _powerselect2 = null;
        _scenariotext = null;
        arbeit_player = null;
        b_sound_count = null;
        battle_volume = null;
        bold_spotpath = null;
        btl_intercept = null;
        btl_lineshift = null;
        btl_minimap_w = null;
        color_detail1 = null;
        color_detail2 = null;
        color_detail3 = null;
        color_magenta = null;
        damage_consti = null;
        event_bg_size = null;
        executive_bdr = null;
        face_colorkey = null;
        font_prologue = null;
        fv_attack_per = null;
        fv_consti_mul = null;
        fv_summon_mul = null;
        item_sell_per = null;
        newpower_flag = null;
        notalent_down = null;
        picture_floor = null;
        picture_trans = null;
        skillicon_add = null;
        skillicon_all = null;
        spot_capacity = null;
        support_range = null;
        unit_scream_m = null;
        unit_scream_n = null;
        unit_slow_per = null;
        _personselect2 = null;
        _scenariotext2 = null;
        b_sound_volume = null;
        bold_spotlabel = null;
        btl_attackmode = null;
        btl_battlemode = null;
        btl_castle_lot = null;
        btl_chargemode = null;
        btl_min_damage = null;
        caution_adjust = null;
        color_namehelp = null;
        color_prologue = null;
        default_ending = null;
        diplo_cost_per = null;
        diplo_frd_down = null;
        diplo_mode_itv = null;
        executive_cost = null;
        font_spotlabel = null;
        font_text_size = null;
        fullbody_speak = null;
        mode_easy_text = null;
        mode_hard_text = null;
        mode_luna_text = null;
        picture_center = null;
        raise_yabo_bdr = null;
        skillicon_item = null;
        t_sound_volume = null;
        target_way_coe = null;
        title_menu_top = null;
        trust_down_per = null;
        unit_drain_mul = null;
        unit_keep_form = null;
        unit_level_max = null;
        unit_status_hp = null;
        b_sound_itv_max = null;
        b_sound_itv_min = null;
        bold_escapepath = null;
        btl_blind_alpha = null;
        btl_prepare_max = null;
        btl_prepare_min = null;
        btl_retreat_coe = null;
        color_spotlabel = null;
        diplo_frd_peace = null;
        diplo_league_up = null;
        fullbody_detail = null;
        unit_action_bdr = null;
        unit_escape_run = null;
        unit_hand_range = null;
        unit_keep_color = null;
        unit_poison_per = null;
        unit_search_bdr = null;
        unit_status_min = null;
        unit_status_rec = null;
        unit_suck_limit = null;
        unit_summon_min = null;
        unit_view_range = null;
        watching_replay = null;
        arbeit_gain_lose = null;
        arbeit_price_coe = null;
        btl_breast_width = null;
        btl_gate_through = null;
        btl_nocastle_bdr = null;
        btl_replace_line = null;
        circle_alpha_per = null;
        color_spotlabel2 = null;
        diplo_bestfriend = null;
        diplo_budget_per = null;
        diplo_most_power = null;
        employ_price_coe = null;
        loyal_escape_bdr = null;
        mode_normal_text = null;
        raise_most_power = null;
        scenario_select2 = null;
        skillicon_assist = null;
        skillicon_leader = null;
        title_menu_right = null;
        title_menu_space = null;
        training_average = null;
        unit_battle_cram = null;
        unit_castle_cram = null;
        unit_image_right = null;
        unit_knock_speed = null;
        unit_sword_slide = null;
        vassal_price_coe = null;
        arbeit_money_mini = null;
        arbeit_vassal_coe = null;
        b_sound_no_repeat = null;
        diplo_success_frd = null;
        diplo_success_leg = null;
        diplo_success_sup = null;
        skillicon_special = null;
        spot_escape_route = null;
        support_gain_lose = null;
        support_trust_bdr = null;
        unit_attack_range = null;
        unit_charge_slide = null;
        unit_element_heal = null;
        unit_escape_range = null;
        unit_status_death = null;
        unit_summon_level = null;
        compati_vassal_bdr = null;
        diplo_frd_turndown = null;
        diplo_sup_turndown = null;
        neutral_member_max = null;
        neutral_member_min = null;
        trust_down_support = null;
        unit_illusion_miss = null;
        unit_missile_slide = null;
        unit_retreat_speed = null;
        unit_confusion_miss = null;
        unit_lifebar_height = null;
        unit_retreat_damage = null;
        unit_specialuse_per = null;
        unit_castle_forcefire = null;
    }

    public ref Pair_NullableString_NullableInt_ArrayElement? TryGet(ReadOnlySpan<char> key, out bool success)
    {
        if (key.Length < 4)
        {
            goto FALSE;
        }

        var keyULong = BinaryPrimitives.ReadUInt64LittleEndian(MemoryMarshal.Cast<char, byte>(key));
        var sliced = key.Slice(4);
        switch (key.Length)
        {
            case 5:
                switch (keyULong)
                {
                    case 0x000000000412F391UL when sliced.SequenceEqual("p"): success = true; return ref _help;
                    case 0x0000000004163EDCUL when sliced.SequenceEqual("d"): success = true; return ref _load;
                    case 0x000000000416D131UL when sliced.SequenceEqual("u"): success = true; return ref _menu;
                    case 0x0000000004178175UL when sliced.SequenceEqual("e"): success = true; return ref _name;
                    case 0x00000000041B6013UL when sliced.SequenceEqual("e"): success = true; return ref _save;
                    case 0x00000000041BAF56UL when sliced.SequenceEqual("t"): success = true; return ref _spot;
                    case 0x00000000041C6FD2UL when sliced.SequenceEqual("l"): success = true; return ref _tool;
                    case 0x00000000041E76E7UL when sliced.SequenceEqual("2"): success = true; return ref _war2;
                    case 0x00000000014B5162UL when sliced.SequenceEqual("m"): success = true; return ref bloom;
                }
                break;
            case 6:
                switch (keyULong)
                {
                    case 0x0000000096361214UL when sliced.SequenceEqual("ps"): success = true; return ref _corps;
                    case 0x00000000964DFC8DUL when sliced.SequenceEqual("lo"): success = true; return ref _diplo;
                    case 0x0000000096BD33F7UL when sliced.SequenceEqual("p2"): success = true; return ref _help2;
                    case 0x00000000973715CEUL when sliced.SequenceEqual("d2"): success = true; return ref _load2;
                    case 0x00000000974C3C17UL when sliced.SequenceEqual("u2"): success = true; return ref _menu2;
                    case 0x00000000974C4EEDUL when sliced.SequenceEqual("ce"): success = true; return ref _merce;
                    case 0x000000009765B5EBUL when sliced.SequenceEqual("e2"): success = true; return ref _name2;
                    case 0x0000000097F4E2C1UL when sliced.SequenceEqual("e2"): success = true; return ref _save2;
                    case 0x0000000098005770UL when sliced.SequenceEqual("t2"): success = true; return ref _spot2;
                    case 0x00000000981C295CUL when sliced.SequenceEqual("l2"): success = true; return ref _tool2;
                    case 0x0000000037D4068DUL when sliced.SequenceEqual("us"): success = true; return ref discus;
                    case 0x0000000040C04B28UL when sliced.SequenceEqual("10"): success = true; return ref font10;
                    case 0x0000000040C04B2AUL when sliced.SequenceEqual("12"): success = true; return ref font12;
                    case 0x0000000040C04B2CUL when sliced.SequenceEqual("14"): success = true; return ref font14;
                    case 0x0000000040C04B2EUL when sliced.SequenceEqual("16"): success = true; return ref font16;
                    case 0x0000000040C04B4DUL when sliced.SequenceEqual("20"): success = true; return ref font20;
                    case 0x000000005C8FE96EUL when sliced.SequenceEqual("er"): success = true; return ref member;
                }
                break;
            case 7:
                switch (keyULong)
                {
                    case 0x00000015B01FC50AUL when sliced.SequenceEqual("tle"): success = true; return ref _battle;
                    case 0x00000015B5D09CE6UL when sliced.SequenceEqual("ps2"): success = true; return ref _corps2;
                    case 0x00000015B8D5F875UL when sliced.SequenceEqual("ail"): success = true; return ref _detail;
                    case 0x00000015B939E87EUL when sliced.SequenceEqual("log"): success = true; return ref _dialog;
                    case 0x00000015B9458063UL when sliced.SequenceEqual("lo2"): success = true; return ref _diplo2;
                    case 0x00000015DE076843UL when sliced.SequenceEqual("ce2"): success = true; return ref _merce2;
                    case 0x00000015F80CA332UL when sliced.SequenceEqual("t22"): success = true; return ref _spot22;
                    case 0x00000015F8743906UL when sliced.SequenceEqual("tus"): success = true; return ref _status;
                }
                break;
            case 8:
                switch (keyULong)
                {
                    case 0x0000032274977A74UL when sliced.SequenceEqual("tle2"): success = true; return ref _battle2;
                    case 0x00000322BEEEDB39UL when sliced.SequenceEqual("atus"): success = true; return ref _bstatus;
                    case 0x000003234695173BUL when sliced.SequenceEqual("menu"): success = true; return ref _commenu;
                    case 0x00000323B6ECE8EBUL when sliced.SequenceEqual("ail2"): success = true; return ref _detail2;
                    case 0x00000323C55E9A38UL when sliced.SequenceEqual("log2"): success = true; return ref _dialog2;
                    case 0x00000329173AF520UL when sliced.SequenceEqual("sage"): success = true; return ref _message;
                    case 0x0000032CE8CC3DE0UL when sliced.SequenceEqual("tus2"): success = true; return ref _status2;
                    case 0x00000104CFFCEB0AUL when sliced.SequenceEqual("auto"): success = true; return ref btl_auto;
                    case 0x00000167EC769431UL when sliced.SequenceEqual("_per"): success = true; return ref gain_per;
                    case 0x000001DF0E02DEB1UL when sliced.SequenceEqual("l_up"): success = true; return ref loyal_up;
                    case 0x000001ECCA2E2BEDUL when sliced.SequenceEqual("unit"): success = true; return ref max_unit;
                    case 0x000001FB2BD0B92EUL when sliced.SequenceEqual("ange"): success = true; return ref my_range;
                    case 0x0000020BAD04C474UL when sliced.SequenceEqual("play"): success = true; return ref npm_play;
                    case 0x0000023742B809ABUL when sliced.SequenceEqual("tics"): success = true; return ref politics;
                    case 0x0000025B0D88AF53UL when sliced.SequenceEqual("_bdr"): success = true; return ref raid_bdr;
                    case 0x0000025B0D88B636UL when sliced.SequenceEqual("_coe"): success = true; return ref raid_coe;
                    case 0x0000025B0D88E9BDUL when sliced.SequenceEqual("_max"): success = true; return ref raid_max;
                    case 0x0000025B0D88EADBUL when sliced.SequenceEqual("_min"): success = true; return ref raid_min;
                    case 0x0000025FE9F85C3EUL when sliced.SequenceEqual("_red"): success = true; return ref ring_red;
                    case 0x000002919D58EDFAUL when sliced.SequenceEqual("t_up"): success = true; return ref trust_up;
                    case 0x000002CE700BF0C4UL when sliced.SequenceEqual("gain"): success = true; return ref win_gain;
                }
                break;
            case 9:
                switch (keyULong)
                {
                    case 0x000074059885AF3FUL when sliced.SequenceEqual("atus2"): success = true; return ref _bstatus2;
                    case 0x00007419338C5B89UL when sliced.SequenceEqual("menu2"): success = true; return ref _commenu2;
                    case 0x00007481D312BADBUL when sliced.SequenceEqual("omenu"): success = true; return ref _heromenu;
                    case 0x000074F05B856DA2UL when sliced.SequenceEqual("sage2"): success = true; return ref _message2;
                    case 0x000075738D866180UL when sliced.SequenceEqual("nario"): success = true; return ref _scenario;
                    case 0x0000210D16BE1074UL when sliced.SequenceEqual("r_per"): success = true; return ref actor_per;
                    case 0x000025B210BF1E41UL when sliced.SequenceEqual("limit"): success = true; return ref btl_limit;
                    case 0x000028752C0F172EUL when sliced.SequenceEqual("r_red"): success = true; return ref color_red;
                    case 0x0000320BE3CB61B2UL when sliced.SequenceEqual("_face"): success = true; return ref font_face;
                    case 0x0000320BE3CB8DC7UL when sliced.SequenceEqual("_file"): success = true; return ref font_file;
                    case 0x0000320BE3D64C44UL when sliced.SequenceEqual("_text"): success = true; return ref font_text;
                    case 0x000032AE2DC6EE9AUL when sliced.SequenceEqual("p_per"): success = true; return ref fv_hp_per;
                    case 0x000032AE427174C3UL when sliced.SequenceEqual("p_per"): success = true; return ref fv_mp_per;
                    case 0x000048625D21C80BUL when sliced.SequenceEqual("_easy"): success = true; return ref mode_easy;
                    case 0x000048625D241968UL when sliced.SequenceEqual("_hard"): success = true; return ref mode_hard;
                    case 0x000048625D279B39UL when sliced.SequenceEqual("_luna"): success = true; return ref mode_luna;
                    case 0x00004A6705963C2BUL when sliced.SequenceEqual("bijun"): success = true; return ref narabijun;
                    case 0x000057DCD0D91F18UL when sliced.SequenceEqual("_blue"): success = true; return ref ring_blue;
                    case 0x000057DCD0DA279FUL when sliced.SequenceEqual("_cyan"): success = true; return ref ring_cyan;
                    case 0x00005E4418E30620UL when sliced.SequenceEqual("e_bgm"): success = true; return ref title_bgm;
                    case 0x0000683EBBB3852FUL when sliced.SequenceEqual("alpha"): success = true; return ref wnd_alpha;
                    case 0x0000685CF578D28EUL when sliced.SequenceEqual("d_bgm"): success = true; return ref world_bgm;
                }
                break;
            case 10:
                switch (keyULong)
                {
                    case 0x0010D6C381B501A9UL when sliced.SequenceEqual("omenu2"): success = true; return ref _heromenu2;
                    case 0x0010F131DE1EE4E2UL when sliced.SequenceEqual("erinfo"): success = true; return ref _powerinfo;
                    case 0x0010F9B3746C1782UL when sliced.SequenceEqual("nario2"): success = true; return ref _scenario2;
                    case 0x000536B69E0C02B3UL when sliced.SequenceEqual("le_bgm"): success = true; return ref battle_bgm;
                    case 0x0005494B1ED50257UL when sliced.SequenceEqual("volume"): success = true; return ref bgm_volume;
                    case 0x000572BC5A9B57ECUL when sliced.SequenceEqual("healer"): success = true; return ref btl_healer;
                    case 0x0005AD0A8DEFC5B9UL when sliced.SequenceEqual("lry_ai"): success = true; return ref cavalry_ai;
                    case 0x0005D8EF5E2223C8UL when sliced.SequenceEqual("r_blue"): success = true; return ref color_blue;
                    case 0x0005D8EF5E232C4FUL when sliced.SequenceEqual("r_cyan"): success = true; return ref color_cyan;
                    case 0x0005D8EF5E2B2E29UL when sliced.SequenceEqual("r_name"): success = true; return ref color_name;
                    case 0x0005D8EF5E2FE861UL when sliced.SequenceEqual("r_text"): success = true; return ref color_text;
                    case 0x000622769DBB114EUL when sliced.SequenceEqual("ge_max"): success = true; return ref damage_max;
                    case 0x000622769DBB126CUL when sliced.SequenceEqual("ge_min"): success = true; return ref damage_min;
                    case 0x00063C4E23450A79UL when sliced.SequenceEqual("o_down"): success = true; return ref diplo_down;
                    case 0x00073BB7EDFC06CAUL when sliced.SequenceEqual("_title"): success = true; return ref font_title;
                    case 0x00073C05D58D6262UL when sliced.SequenceEqual("e_fire"): success = true; return ref force_fire;
                    case 0x0007447D7AA41397UL when sliced.SequenceEqual("_raise"): success = true; return ref free_raise;
                    case 0x000A01D1ED4BBC3AUL when sliced.SequenceEqual("l_down"): success = true; return ref loyal_down;
                    case 0x000C632A52F23E3EUL when sliced.SequenceEqual("a_view"): success = true; return ref quota_view;
                    case 0x000C98675BB1D9B4UL when sliced.SequenceEqual("_label"): success = true; return ref race_label;
                    case 0x000CB2EA2F44CB43UL when sliced.SequenceEqual("_alpha"): success = true; return ref ring_alpha;
                    case 0x000CB2EA2FF4C8E2UL when sliced.SequenceEqual("_green"): success = true; return ref ring_green;
                    case 0x000CC4F94E76DD07UL when sliced.SequenceEqual("_avoid"): success = true; return ref roam_avoid;
                    case 0x000D1C5704722E6DUL when sliced.SequenceEqual("or_bdr"): success = true; return ref senior_bdr;
                    case 0x000D3F97D23EA689UL when sliced.SequenceEqual("_fire1"): success = true; return ref spot_fire1;
                    case 0x000D3F97D23EA68AUL when sliced.SequenceEqual("_fire2"): success = true; return ref spot_fire2;
                    case 0x000D3F97D39A8746UL when sliced.SequenceEqual("_route"): success = true; return ref spot_route;
                    case 0x000D9FD798D908F4UL when sliced.SequenceEqual("e_name"): success = true; return ref title_name;
                    case 0x000F1111261914D6UL when sliced.SequenceEqual("button"): success = true; return ref wnd_button;
                    case 0x000F219A60B473C1UL when sliced.SequenceEqual("n_cell"): success = true; return ref wskin_cell;
                    case 0x001077AC78A14F1FUL when sliced.SequenceEqual("_alpha"): success = true; return ref zone_alpha;
                }
                break;
            case 11:
                switch (keyULong)
                {
                    case 0x0272BBDCC6D02A15UL when sliced.SequenceEqual("soninfo"): success = true; return ref _personinfo;
                    case 0x0272DC351A7714ACUL when sliced.SequenceEqual("erinfo2"): success = true; return ref _powerinfo2;
                    case 0x00B771999AEDD6C4UL when sliced.SequenceEqual("it_gain"): success = true; return ref arbeit_gain;
                    case 0x00B771999AF84F3EUL when sliced.SequenceEqual("it_turn"): success = true; return ref arbeit_turn;
                    case 0x00C0E864D7BF5C38UL when sliced.SequenceEqual("le_fast"): success = true; return ref battle_fast;
                    case 0x00C9953647612A80UL when sliced.SequenceEqual("counter"): success = true; return ref btl_counter;
                    case 0x00C9953B8E08CED9UL when sliced.SequenceEqual("limit_c"): success = true; return ref btl_limit_c;
                    case 0x00C9953C27131F6FUL when sliced.SequenceEqual("minimap"): success = true; return ref btl_minimap;
                    case 0x00C9953C4FA869F6UL when sliced.SequenceEqual("msgtime"): success = true; return ref btl_msgtime;
                    case 0x00C9953FC934304CUL when sliced.SequenceEqual("slowper"): success = true; return ref btl_slowper;
                    case 0x00C9953FE8AD746DUL when sliced.SequenceEqual("standby"): success = true; return ref btl_standby;
                    case 0x00C9954102A62FB2UL when sliced.SequenceEqual("unitmax"): success = true; return ref btl_unitmax;
                    case 0x00C99542205C5B97UL when sliced.SequenceEqual("wingmax"): success = true; return ref btl_wingmax;
                    case 0x00D85A989B827652UL when sliced.SequenceEqual("r_green"): success = true; return ref color_green;
                    case 0x00D85A989D446246UL when sliced.SequenceEqual("r_white"): success = true; return ref color_white;
                    case 0x00D85DD641807312UL when sliced.SequenceEqual("ati_bad"): success = true; return ref compati_bad;
                    case 0x00E2FB24CC098048UL when sliced.SequenceEqual("ge_max2"): success = true; return ref damage_max2;
                    case 0x00E2FB24CC09A99EUL when sliced.SequenceEqual("ge_min2"): success = true; return ref damage_min2;
                    case 0x010BA19522D8AFF4UL when sliced.SequenceEqual("_detail"): success = true; return ref font_detail;
                    case 0x010F05E0A1F765EBUL when sliced.SequenceEqual("ove_per"): success = true; return ref fv_move_per;
                    case 0x0141135F2B2CEE4DUL when sliced.SequenceEqual("_window"): success = true; return ref item_window;
                    case 0x0183160430690CFCUL when sliced.SequenceEqual("_normal"): success = true; return ref mode_normal;
                    case 0x018FC4FC014B33D3UL when sliced.SequenceEqual("ral_max"): success = true; return ref neutral_max;
                    case 0x018FC4FC014B34F1UL when sliced.SequenceEqual("ral_min"): success = true; return ref neutral_min;
                    case 0x01B692D6D9A99993UL when sliced.SequenceEqual("r_order"): success = true; return ref power_order;
                    case 0x01D206F05FE2422AUL when sliced.SequenceEqual("_suffix"): success = true; return ref race_suffix;
                    case 0x01D5DBD90F6EF70AUL when sliced.SequenceEqual("_orange"): success = true; return ref ring_orange;
                    case 0x01D5DBD913F40BCAUL when sliced.SequenceEqual("_purple"): success = true; return ref ring_purple;
                    case 0x01D5DBD93758B626UL when sliced.SequenceEqual("_yellow"): success = true; return ref ring_yellow;
                    case 0x01E51893A481B6B3UL when sliced.SequenceEqual("or_cost"): success = true; return ref senior_cost;
                    case 0x01E9CD572AB94D48UL when sliced.SequenceEqual("d_count"): success = true; return ref sound_count;
                    case 0x01F44E6C8838B52BUL when sliced.SequenceEqual("nt_mode"): success = true; return ref talent_mode;
                    case 0x01F81A29160BC670UL when sliced.SequenceEqual("e_bgm_s"): success = true; return ref title_bgm_s;
                    case 0x020B5C2433D9FD9FUL when sliced.SequenceEqual("_vanish"): success = true; return ref unit_vanish;
                    case 0x02614BEDB4506742UL when sliced.SequenceEqual("_radius"): success = true; return ref zone_radius;
                }
                break;
            case 12:
                switch (keyULong)
                {
                    case 0x5A9526E8BC16150BUL when sliced.SequenceEqual("soninfo2"): success = true; return ref _personinfo2;
                    case 0x5A99D3ACFB8E17F8UL when sliced.SequenceEqual("erselect"): success = true; return ref _powerselect;
                    case 0x1D2291B5119A3C5CUL when sliced.SequenceEqual("mode_coe"): success = true; return ref btl_mode_coe;
                    case 0x1D22921B4CF9F0DAUL when sliced.SequenceEqual("raidback"): success = true; return ref btl_raidback;
                    case 0x1D229233DC2A00A4UL when sliced.SequenceEqual("semiauto"): success = true; return ref btl_semiauto;
                    case 0x1F45180E9AE9083AUL when sliced.SequenceEqual("r_orange"): success = true; return ref color_orange;
                    case 0x1F45180EC2D2C756UL when sliced.SequenceEqual("r_yellow"): success = true; return ref color_yellow;
                    case 0x210D22C97A3455DAUL when sliced.SequenceEqual("_penalty"): success = true; return ref dead_penalty;
                    case 0x21587DDAA4C09C1BUL when sliced.SequenceEqual("o_frd_up"): success = true; return ref diplo_frd_up;
                    case 0x21587DDADADB0A1BUL when sliced.SequenceEqual("o_sup_up"): success = true; return ref diplo_sup_up;
                    case 0x2414EA835CB0BAF6UL when sliced.SequenceEqual("oy_range"): success = true; return ref employ_range;
                    case 0x26AE5A8CC6111AF1UL when sliced.SequenceEqual("_balloon"): success = true; return ref font_balloon;
                    case 0x26B001E33B46CFD1UL when sliced.SequenceEqual("ign_test"): success = true; return ref foreign_test;
                    case 0x272BC9920C52B96FUL when sliced.SequenceEqual("prec_per"): success = true; return ref fv_hprec_per;
                    case 0x272BD5688F378901UL when sliced.SequenceEqual("evel_per"): success = true; return ref fv_level_per;
                    case 0x272BECAE3958B7D6UL when sliced.SequenceEqual("peed_per"): success = true; return ref fv_speed_per;
                    case 0x34CE137DC1C1F69BUL when sliced.SequenceEqual("e_period"): success = true; return ref leave_period;
                    case 0x3583BB9DF1B94BD6UL when sliced.SequenceEqual("l_border"): success = true; return ref loyal_border;
                    case 0x374DDBC3D0204922UL when sliced.SequenceEqual("ts_bonus"): success = true; return ref merits_bonus;
                    case 0x37FA7CF785A6700AUL when sliced.SequenceEqual("ment_num"): success = true; return ref movement_num;
                    case 0x389EDBEF16230D03UL when sliced.SequenceEqual("lp_range"): success = true; return ref myhelp_range;
                    case 0x3EF3ACED2648544FUL when sliced.SequenceEqual("ure_fade"): success = true; return ref picture_fade;
                    case 0x4237D1BDA4E2A7CAUL when sliced.SequenceEqual("ter_view"): success = true; return ref quarter_view;
                    case 0x4680C7FA7A9DBD2DUL when sliced.SequenceEqual("l_offset"): success = true; return ref skill_offset;
                    case 0x46CAAD997B4958ECUL when sliced.SequenceEqual("d_volume"): success = true; return ref sound_volume;
                    case 0x472EE6363A04BEBBUL when sliced.SequenceEqual("ort_gain"): success = true; return ref support_gain;
                    case 0x48DBC7F08341A799UL when sliced.SequenceEqual("e_volume"): success = true; return ref title_volume;
                    case 0x4976163BD4441FA1UL when sliced.SequenceEqual("t_morale"): success = true; return ref trust_morale;
                    case 0x4BA419D8C1B22332UL when sliced.SequenceEqual("ode_test"): success = true; return ref unicode_test;
                    case 0x4BA4513B2F05DEBEUL when sliced.SequenceEqual("_use_coe"): success = true; return ref unit_use_coe;
                    case 0x4FBAA5928BD7F723UL when sliced.SequenceEqual("capacity"): success = true; return ref war_capacity;
                    case 0x50A9A12636E3C88FUL when sliced.SequenceEqual("d_volume"): success = true; return ref world_volume;
                }
                break;
            case 13:
                switch (keyULong)
                {
                    case 0x5A9526E8BD2D385EUL when sliced.SequenceEqual("sonselect"): success = true; return ref _personselect;
                    case 0x5A99D3ACFB8E17F8UL when sliced.SequenceEqual("erselect2"): success = true; return ref _powerselect2;
                    case 0x5AC750A9960A48BCUL when sliced.SequenceEqual("nariotext"): success = true; return ref _scenariotext;
                    case 0x1A836B336569C229UL when sliced.SequenceEqual("it_player"): success = true; return ref arbeit_player;
                    case 0x1D9D3D21A41A08B2UL when sliced.SequenceEqual("und_count"): success = true; return ref b_sound_count;
                    case 0x1BE19693307C900AUL when sliced.SequenceEqual("le_volume"): success = true; return ref battle_volume;
                    case 0x1CCCDE8A6E522FCBUL when sliced.SequenceEqual("_spotpath"): success = true; return ref bold_spotpath;
                    case 0x1D22915C51411E83UL when sliced.SequenceEqual("intercept"): success = true; return ref btl_intercept;
                    case 0x1D22919B8AF471E3UL when sliced.SequenceEqual("lineshift"): success = true; return ref btl_lineshift;
                    case 0x1D2291B1A5C38B2FUL when sliced.SequenceEqual("minimap_w"): success = true; return ref btl_minimap_w;
                    case 0x1F45180E6C0C8709UL when sliced.SequenceEqual("r_detail1"): success = true; return ref color_detail1;
                    case 0x1F45180E6C0C8709UL when sliced.SequenceEqual("r_detail2"): success = true; return ref color_detail2;
                    case 0x1F45180E6C0C8709UL when sliced.SequenceEqual("r_detail3"): success = true; return ref color_detail3;
                    case 0x1F45180E90C31EAEUL when sliced.SequenceEqual("r_magenta"): success = true; return ref color_magenta;
                    case 0x20CE4C517C4C3179UL when sliced.SequenceEqual("ge_consti"): success = true; return ref damage_consti;
                    case 0x24A99D949BFBB13BUL when sliced.SequenceEqual("t_bg_size"): success = true; return ref event_bg_size;
                    case 0x24CBA5464C30FE33UL when sliced.SequenceEqual("utive_bdr"): success = true; return ref executive_bdr;
                    case 0x25B9EB17735E4C61UL when sliced.SequenceEqual("_colorkey"): success = true; return ref face_colorkey;
                    case 0x26AE5A9569ACF7C6UL when sliced.SequenceEqual("_prologue"): success = true; return ref font_prologue;
                    case 0x272BB38EE67E5E47UL when sliced.SequenceEqual("ttack_per"): success = true; return ref fv_attack_per;
                    case 0x272BB980B97C4CF4UL when sliced.SequenceEqual("onsti_mul"): success = true; return ref fv_consti_mul;
                    case 0x272BED21A6F0C827UL when sliced.SequenceEqual("ummon_mul"): success = true; return ref fv_summon_mul;
                    case 0x2E67CCBEC90BBEE6UL when sliced.SequenceEqual("_sell_per"): success = true; return ref item_sell_per;
                    case 0x39C857D5CD954FF9UL when sliced.SequenceEqual("ower_flag"): success = true; return ref newpower_flag;
                    case 0x3A719AD669AF6D5EUL when sliced.SequenceEqual("lent_down"): success = true; return ref notalent_down;
                    case 0x3EF3ACED264890C3UL when sliced.SequenceEqual("ure_floor"): success = true; return ref picture_floor;
                    case 0x3EF3ACED265380E8UL when sliced.SequenceEqual("ure_trans"): success = true; return ref picture_trans;
                    case 0x4680C7EF89526694UL when sliced.SequenceEqual("licon_add"): success = true; return ref skillicon_add;
                    case 0x4680C7EF8952669CUL when sliced.SequenceEqual("licon_all"): success = true; return ref skillicon_all;
                    case 0x46D912E164F20DD2UL when sliced.SequenceEqual("_capacity"): success = true; return ref spot_capacity;
                    case 0x472EE6363A0D3FECUL when sliced.SequenceEqual("ort_range"): success = true; return ref support_range;
                    case 0x4BA45139BC6B2835UL when sliced.SequenceEqual("_scream_m"): success = true; return ref unit_scream_m;
                    case 0x4BA45139BC6B2835UL when sliced.SequenceEqual("_scream_n"): success = true; return ref unit_scream_n;
                    case 0x4BA45139E156C3CCUL when sliced.SequenceEqual("_slow_per"): success = true; return ref unit_slow_per;
                }
                break;
            case 14:
                switch (keyULong)
                {
                    case 0x5A9526E8BD2D385EUL when sliced.SequenceEqual("sonselect2"): success = true; return ref _personselect2;
                    case 0x5AC750A9960A48BCUL when sliced.SequenceEqual("nariotext2"): success = true; return ref _scenariotext2;
                    case 0x1D9D3D21A428B6D3UL when sliced.SequenceEqual("und_volume"): success = true; return ref b_sound_volume;
                    case 0x1CCCDE8A6E521A55UL when sliced.SequenceEqual("_spotlabel"): success = true; return ref bold_spotlabel;
                    case 0x1D2290AF134AAB09UL when sliced.SequenceEqual("attackmode"): success = true; return ref btl_attackmode;
                    case 0x1D2290B9D62AA7BDUL when sliced.SequenceEqual("battlemode"): success = true; return ref btl_battlemode;
                    case 0x1D2290CFEC6A0BF8UL when sliced.SequenceEqual("castle_lot"): success = true; return ref btl_castle_lot;
                    case 0x1D2290D3D0483D47UL when sliced.SequenceEqual("chargemode"): success = true; return ref btl_chargemode;
                    case 0x1D2291B1A7BF56D3UL when sliced.SequenceEqual("min_damage"): success = true; return ref btl_min_damage;
                    case 0x1E5A23AC1E33ADF6UL when sliced.SequenceEqual("ion_adjust"): success = true; return ref caution_adjust;
                    case 0x1F45180E94E9DBC4UL when sliced.SequenceEqual("r_namehelp"): success = true; return ref color_namehelp;
                    case 0x1F45180E9F15EB9DUL when sliced.SequenceEqual("r_prologue"): success = true; return ref color_prologue;
                    case 0x210F67ACA811C6DCUL when sliced.SequenceEqual("ult_ending"): success = true; return ref default_ending;
                    case 0x21587DDA980FF42BUL when sliced.SequenceEqual("o_cost_per"): success = true; return ref diplo_cost_per;
                    case 0x21587DDAA4C099A5UL when sliced.SequenceEqual("o_frd_down"): success = true; return ref diplo_frd_down;
                    case 0x21587DDAC159184CUL when sliced.SequenceEqual("o_mode_itv"): success = true; return ref diplo_mode_itv;
                    case 0x24CBA5464C30FE63UL when sliced.SequenceEqual("utive_cost"): success = true; return ref executive_cost;
                    case 0x26AE5A972C388263UL when sliced.SequenceEqual("_spotlabel"): success = true; return ref font_spotlabel;
                    case 0x26AE5A9798B0EF56UL when sliced.SequenceEqual("_text_size"): success = true; return ref font_text_size;
                    case 0x2713D2C22179C454UL when sliced.SequenceEqual("body_speak"): success = true; return ref fullbody_speak;
                    case 0x37F22E95651AED42UL when sliced.SequenceEqual("_easy_text"): success = true; return ref mode_easy_text;
                    case 0x37F22E972FB7BB8BUL when sliced.SequenceEqual("_hard_text"): success = true; return ref mode_hard_text;
                    case 0x37F22E99E5A4A1F8UL when sliced.SequenceEqual("_luna_text"): success = true; return ref mode_luna_text;
                    case 0x3EF3ACED2646199DUL when sliced.SequenceEqual("ure_center"): success = true; return ref picture_center;
                    case 0x435DF0C843FDB663UL when sliced.SequenceEqual("e_yabo_bdr"): success = true; return ref raise_yabo_bdr;
                    case 0x4680C7EF895267CCUL when sliced.SequenceEqual("licon_item"): success = true; return ref skillicon_item;
                    case 0x4A0EDD8CC634AD1DUL when sliced.SequenceEqual("und_volume"): success = true; return ref t_sound_volume;
                    case 0x4852207ED808E97DUL when sliced.SequenceEqual("et_way_coe"): success = true; return ref target_way_coe;
                    case 0x48DBC7F05CF24A81UL when sliced.SequenceEqual("e_menu_top"): success = true; return ref title_menu_top;
                    case 0x4976163BAF155330UL when sliced.SequenceEqual("t_down_per"): success = true; return ref trust_down_per;
                    case 0x4BA451310297C5D9UL when sliced.SequenceEqual("_drain_mul"): success = true; return ref unit_drain_mul;
                    case 0x4BA45134FBD59DD4UL when sliced.SequenceEqual("_keep_form"): success = true; return ref unit_keep_form;
                    case 0x4BA4513596A0D8EFUL when sliced.SequenceEqual("_level_max"): success = true; return ref unit_level_max;
                    case 0x4BA4513A00D4CC1EUL when sliced.SequenceEqual("_status_hp"): success = true; return ref unit_status_hp;
                }
                break;
            case 15:
                switch (keyULong)
                {
                    case 0x1D9D3D21A41EC6CFUL when sliced.SequenceEqual("und_itv_max"): success = true; return ref b_sound_itv_max;
                    case 0x1D9D3D21A41EC6CFUL when sliced.SequenceEqual("und_itv_min"): success = true; return ref b_sound_itv_min;
                    case 0x1CCCDE821C505B29UL when sliced.SequenceEqual("_escapepath"): success = true; return ref bold_escapepath;
                    case 0x1D2290C03A3AD892UL when sliced.SequenceEqual("blind_alpha"): success = true; return ref btl_blind_alpha;
                    case 0x1D2291F930D13977UL when sliced.SequenceEqual("prepare_max"): success = true; return ref btl_prepare_max;
                    case 0x1D2291F930D13977UL when sliced.SequenceEqual("prepare_min"): success = true; return ref btl_prepare_min;
                    case 0x1D22921DDFBB4C6FUL when sliced.SequenceEqual("retreat_coe"): success = true; return ref btl_retreat_coe;
                    case 0x1F45180EAB43348DUL when sliced.SequenceEqual("r_spotlabel"): success = true; return ref color_spotlabel;
                    case 0x21587DDAA4C09B57UL when sliced.SequenceEqual("o_frd_peace"): success = true; return ref diplo_frd_peace;
                    case 0x21587DDABC16BC46UL when sliced.SequenceEqual("o_league_up"): success = true; return ref diplo_league_up;
                    case 0x2713D2C221797295UL when sliced.SequenceEqual("body_detail"): success = true; return ref fullbody_detail;
                    case 0x4BA4512EFBEDEE6CUL when sliced.SequenceEqual("_action_bdr"): success = true; return ref unit_action_bdr;
                    case 0x4BA451319FDACC03UL when sliced.SequenceEqual("_escape_run"): success = true; return ref unit_escape_run;
                    case 0x4BA45133217BABF0UL when sliced.SequenceEqual("_hand_range"): success = true; return ref unit_hand_range;
                    case 0x4BA45134FBD59D65UL when sliced.SequenceEqual("_keep_color"): success = true; return ref unit_keep_color;
                    case 0x4BA4513822448476UL when sliced.SequenceEqual("_poison_per"): success = true; return ref unit_poison_per;
                    case 0x4BA45139C2D34C10UL when sliced.SequenceEqual("_search_bdr"): success = true; return ref unit_search_bdr;
                    case 0x4BA4513A00D4CC1EUL when sliced.SequenceEqual("_status_min"): success = true; return ref unit_status_min;
                    case 0x4BA4513A00D4CC1EUL when sliced.SequenceEqual("_status_rec"): success = true; return ref unit_status_rec;
                    case 0x4BA4513A05294311UL when sliced.SequenceEqual("_suck_limit"): success = true; return ref unit_suck_limit;
                    case 0x4BA4513A06488865UL when sliced.SequenceEqual("_summon_min"): success = true; return ref unit_summon_min;
                    case 0x4BA4513B9E9C1C84UL when sliced.SequenceEqual("_view_range"): success = true; return ref unit_view_range;
                    case 0x4FBB45C0742A393FUL when sliced.SequenceEqual("hing_replay"): success = true; return ref watching_replay;
                }
                break;
            case 16:
                switch (keyULong)
                {
                    case 0x1A836B3364600A78UL when sliced.SequenceEqual("it_gain_lose"): success = true; return ref arbeit_gain_lose;
                    case 0x1A836B33656E8CF1UL when sliced.SequenceEqual("it_price_coe"): success = true; return ref arbeit_price_coe;
                    case 0x1D2290C3BDDD6408UL when sliced.SequenceEqual("breast_width"): success = true; return ref btl_breast_width;
                    case 0x1D22912858710A53UL when sliced.SequenceEqual("gate_through"): success = true; return ref btl_gate_through;
                    case 0x1D2291CB27616662UL when sliced.SequenceEqual("nocastle_bdr"): success = true; return ref btl_nocastle_bdr;
                    case 0x1D22921DCE843C88UL when sliced.SequenceEqual("replace_line"): success = true; return ref btl_replace_line;
                    case 0x1EE1360EF6802B2FUL when sliced.SequenceEqual("le_alpha_per"): success = true; return ref circle_alpha_per;
                    case 0x1F45180EAB43348DUL when sliced.SequenceEqual("r_spotlabel2"): success = true; return ref color_spotlabel2;
                    case 0x21587DDA92CFDCE5UL when sliced.SequenceEqual("o_bestfriend"): success = true; return ref diplo_bestfriend;
                    case 0x21587DDA948D8E5AUL when sliced.SequenceEqual("o_budget_per"): success = true; return ref diplo_budget_per;
                    case 0x21587DDAC165007DUL when sliced.SequenceEqual("o_most_power"): success = true; return ref diplo_most_power;
                    case 0x2414EA835C849170UL when sliced.SequenceEqual("oy_price_coe"): success = true; return ref employ_price_coe;
                    case 0x3583BB9DFE8659A5UL when sliced.SequenceEqual("l_escape_bdr"): success = true; return ref loyal_escape_bdr;
                    case 0x37F22E9AFF2EE090UL when sliced.SequenceEqual("_normal_text"): success = true; return ref mode_normal_text;
                    case 0x435DF0C81402100DUL when sliced.SequenceEqual("e_most_power"): success = true; return ref raise_most_power;
                    case 0x45F6498AD80D0307UL when sliced.SequenceEqual("ario_select2"): success = true; return ref scenario_select2;
                    case 0x4680C7EF895266A3UL when sliced.SequenceEqual("licon_assist"): success = true; return ref skillicon_assist;
                    case 0x4680C7EF8952682CUL when sliced.SequenceEqual("licon_leader"): success = true; return ref skillicon_leader;
                    case 0x48DBC7F05CF24A7FUL when sliced.SequenceEqual("e_menu_right"): success = true; return ref title_menu_right;
                    case 0x48DBC7F05CF24A80UL when sliced.SequenceEqual("e_menu_space"): success = true; return ref title_menu_space;
                    case 0x496CB9BCD4EC5D87UL when sliced.SequenceEqual("ning_average"): success = true; return ref training_average;
                    case 0x4BA4512F8CA008B2UL when sliced.SequenceEqual("_battle_cram"): success = true; return ref unit_battle_cram;
                    case 0x4BA451302571508AUL when sliced.SequenceEqual("_castle_cram"): success = true; return ref unit_castle_cram;
                    case 0x4BA45133EA90E7C7UL when sliced.SequenceEqual("_image_right"): success = true; return ref unit_image_right;
                    case 0x4BA45135221C29FFUL when sliced.SequenceEqual("_knock_speed"): success = true; return ref unit_knock_speed;
                    case 0x4BA4513A0EC99448UL when sliced.SequenceEqual("_sword_slide"): success = true; return ref unit_sword_slide;
                    case 0x4D42EAEF45A80A9CUL when sliced.SequenceEqual("al_price_coe"): success = true; return ref vassal_price_coe;
                }
                break;
            case 17:
                switch (keyULong)
                {
                    case 0x1A836B3365168BA2UL when sliced.SequenceEqual("it_money_mini"): success = true; return ref arbeit_money_mini;
                    case 0x1A836B33660D36B0UL when sliced.SequenceEqual("it_vassal_coe"): success = true; return ref arbeit_vassal_coe;
                    case 0x1D9D3D21A4228A13UL when sliced.SequenceEqual("und_no_repeat"): success = true; return ref b_sound_no_repeat;
                    case 0x21587DDADAD07B3DUL when sliced.SequenceEqual("o_success_frd"): success = true; return ref diplo_success_frd;
                    case 0x21587DDADAD07B3DUL when sliced.SequenceEqual("o_success_leg"): success = true; return ref diplo_success_leg;
                    case 0x21587DDADAD07B3DUL when sliced.SequenceEqual("o_success_sup"): success = true; return ref diplo_success_sup;
                    case 0x4680C7EF8952693AUL when sliced.SequenceEqual("licon_special"): success = true; return ref skillicon_special;
                    case 0x46D912E2DFC03319UL when sliced.SequenceEqual("_escape_route"): success = true; return ref spot_escape_route;
                    case 0x472EE6363A04BEBBUL when sliced.SequenceEqual("ort_gain_lose"): success = true; return ref support_gain_lose;
                    case 0x472EE6363A0F279EUL when sliced.SequenceEqual("ort_trust_bdr"): success = true; return ref support_trust_bdr;
                    case 0x4BA4512F422B470EUL when sliced.SequenceEqual("_attack_range"): success = true; return ref unit_attack_range;
                    case 0x4BA45130405BA4F4UL when sliced.SequenceEqual("_charge_slide"): success = true; return ref unit_charge_slide;
                    case 0x4BA45131832E4EE1UL when sliced.SequenceEqual("_element_heal"): success = true; return ref unit_element_heal;
                    case 0x4BA451319FDACC03UL when sliced.SequenceEqual("_escape_range"): success = true; return ref unit_escape_range;
                    case 0x4BA4513A00D4CC1EUL when sliced.SequenceEqual("_status_death"): success = true; return ref unit_status_death;
                    case 0x4BA4513A06488865UL when sliced.SequenceEqual("_summon_level"): success = true; return ref unit_summon_level;
                }
                break;
            case 18:
                switch (keyULong)
                {
                    case 0x1F458FF777A01925UL when sliced.SequenceEqual("ati_vassal_bdr"): success = true; return ref compati_vassal_bdr;
                    case 0x21587DDAA4C09BFBUL when sliced.SequenceEqual("o_frd_turndown"): success = true; return ref diplo_frd_turndown;
                    case 0x21587DDADADB09FBUL when sliced.SequenceEqual("o_sup_turndown"): success = true; return ref diplo_sup_turndown;
                    case 0x39C7786C2FDE9157UL when sliced.SequenceEqual("ral_member_max"): success = true; return ref neutral_member_max;
                    case 0x39C7786C2FDE9157UL when sliced.SequenceEqual("ral_member_min"): success = true; return ref neutral_member_min;
                    case 0x4976163BAF155333UL when sliced.SequenceEqual("t_down_support"): success = true; return ref trust_down_support;
                    case 0x4BA45133E7B479A4UL when sliced.SequenceEqual("_illusion_miss"): success = true; return ref unit_illusion_miss;
                    case 0x4BA451363FCC1A11UL when sliced.SequenceEqual("_missile_slide"): success = true; return ref unit_missile_slide;
                    case 0x4BA451392C04CED2UL when sliced.SequenceEqual("_retreat_speed"): success = true; return ref unit_retreat_speed;
                }
                break;
            case 19:
                switch (keyULong)
                {
                    case 0x4BA451305EB52B7AUL when sliced.SequenceEqual("_confusion_miss"): success = true; return ref unit_confusion_miss;
                    case 0x4BA45135A55F7BFCUL when sliced.SequenceEqual("_lifebar_height"): success = true; return ref unit_lifebar_height;
                    case 0x4BA451392C04CED2UL when sliced.SequenceEqual("_retreat_damage"): success = true; return ref unit_retreat_damage;
                    case 0x4BA45139F0B15E0CUL when sliced.SequenceEqual("_specialuse_per"): success = true; return ref unit_specialuse_per;
                }
                break;
            case 4 when keyULong == 0x70006D00610063UL: success = true; return ref camp;
            case 4 when keyULong == 0x7200610077005FUL: success = true; return ref _war;
            case 21 when key.SequenceEqual("unit_castle_forcefire"): success = true; return ref unit_castle_forcefire;
        }

    FALSE:
        success = false;
        return ref Unsafe.NullRef<Pair_NullableString_NullableInt_ArrayElement?>();
    }
}
