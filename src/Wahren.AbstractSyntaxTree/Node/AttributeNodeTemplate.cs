#nullable enable
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY T4. DO NOT CHANGE IT. CHANGE THE .tt FILE INSTEAD.
// </auto-generated>
namespace Wahren.AbstractSyntaxTree.Node;

public sealed class AttributeNode : INode
{
    public uint Kind { get; set; }
    public uint BracketLeft { get; set; }
    public uint BracketRight { get; set; }

    public Pair_NullableString_NullableIntElement? poi = null;
    public Pair_NullableString_NullableIntElement? para = null;
    public Pair_NullableString_NullableIntElement? sil = null;
    public Pair_NullableString_NullableIntElement? ill = null;
    public Pair_NullableString_NullableIntElement? conf = null;
    public Pair_NullableString_NullableIntElement? stone = null;
    public Pair_NullableString_NullableIntElement? fear = null;
    public Pair_NullableString_NullableIntElement? suck = null;
    public Pair_NullableString_NullableIntElement? magsuck = null;
    public Pair_NullableString_NullableIntElement? drain = null;
    public Pair_NullableString_NullableIntElement? death = null;
    public Pair_NullableString_NullableIntElement? wall = null;
    public StringSpanKeyDictionary<Pair_NullableString_NullableIntElement> Others = new();

    public void Dispose()
    {
        poi = null;
        para = null;
        sil = null;
        ill = null;
        conf = null;
        stone = null;
        fear = null;
        suck = null;
        magsuck = null;
        drain = null;
        death = null;
        wall = null;
        Others.Dispose();
    }

    public ref Pair_NullableString_NullableIntElement? TryGet(ReadOnlySpan<char> key)
    {
        var keyULong = StringHashUtility.Calc(key);
        switch (key.Length)
        {
            case 3:
                switch (keyULong)
                {
                    case 0x000000000000893BUL:
                        return ref poi;
                    case 0x000000000000986BUL:
                        return ref sil;
                    case 0x0000000000006360UL:
                        return ref ill;
                }
                break;
            case 4:
                switch (keyULong)
                {
                    case 0x0000000000138C00UL:
                        return ref para;
                    case 0x000000000009CA16UL:
                        return ref conf;
                    case 0x00000000000BE45EUL:
                        return ref fear;
                    case 0x000000000016466AUL:
                        return ref suck;
                    case 0x000000000018F438UL:
                        return ref wall;
                }
                break;
            case 5:
                switch (keyULong)
                {
                    case 0x000000000337A81EUL:
                        return ref stone;
                    case 0x000000000188DAB7UL:
                        return ref drain;
                    case 0x00000000017ED00FUL:
                        return ref death;
                }
                break;
            case 7:
                switch (keyULong)
                {
                    case 0x0000000D4FA63312UL:
                        return ref magsuck;
                }
                break;
        }

        return ref Others.TryGetRef(key);
    }
}
