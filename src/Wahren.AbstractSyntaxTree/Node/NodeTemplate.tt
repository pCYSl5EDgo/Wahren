<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="NetStandard" #>
<#@ assembly name="$(t4LibFolder)\Wahren.AbstractSyntaxTree.TextTemplateHelper.dll" #>
<#@ import namespace="Wahren.AbstractSyntaxTree.TextTemplateHelper" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
#nullable enable
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY T4. DO NOT CHANGE IT. CHANGE THE .tt FILE INSTEAD.
// </auto-generated>
namespace Wahren.AbstractSyntaxTree.Node;

using Statement;
<#
foreach (var node in NodeInfo.Nodes) {
    ElementInfo[] elements = node.Elements;
#>

public partial struct <#= node.Name #>Node : IInheritableNode
{
    public uint Kind { get; set; }
    public uint BracketLeft { get; set; }
    public uint BracketRight { get; set; }
    public uint? Super { get; set; }
    public uint Name { get; set; }

<# if (node.HasBlock) { #>
    public List<IStatement> Statements = new();
<# } #>
<# foreach (var additionalField in node.Fields) { #>
	public <#= additionalField.Type #> <#= additionalField.Name #> = new();
<# } #>
<# foreach (var item in elements) { #>
<#		if (item.VariantType == "") { #>
	public <#= item.Type #>? <#= item.Name.Escape() #> = default;
<#		} else { #>
	public VariantPair<<#= item.Type #>> <#= item.Name.Escape() #> = new();
<#		} #>
<# } #>

	public void Dispose()
	{
<# if (node.HasBlock) { #>
		Statements.Dispose();
<# } #>
<#	foreach (var additionalField in node.Fields) { #>
<#		if (additionalField.IsDisposable) { #>
		<#= additionalField.Name #>.Dispose();
<#		} #>
<#	} #>
<# foreach (var item in elements) { #>
<#		if (item.VariantType == "") { #>
<#				if (item.Type == "Pair_NullableString_NullableInt_ArrayElement") { #>
		<#= item.Name.Escape() #>?.Dispose();
<#				} #>
		<#= item.Name.Escape() #> = default;
<#		} else { #>
		<#= item.Name.Escape() #>.Dispose();
<# 		}
 	} #>
	}
}
<#}#>