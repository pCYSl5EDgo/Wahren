<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="NetStandard" #>
<#@ assembly name="$(t4LibFolder)\Wahren.AbstractSyntaxTree.TextTemplateHelper.dll" #>
<#@ import namespace="Wahren.AbstractSyntaxTree.TextTemplateHelper" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
#nullable enable
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY T4. DO NOT CHANGE IT. CHANGE THE .tt FILE INSTEAD.
// </auto-generated>
namespace Wahren.AbstractSyntaxTree.Parser;
<#
ElementInfo[] array = ElementInfo.Discards;
#>

public static partial class Parser
{
	public static bool Parse_Discard(ref Context context, ref Result result, uint elementTokenId, ReadOnlySpan<char> elementRest, ulong element4)
	{
		switch (elementRest.Length)
		{
			case 0:
				switch (element4)
				{
<# foreach (var (len, items) in array.MakeGroup()) { if (len > 4) continue;
	foreach (var (item, key, rest) in items) { #>
					case 0x<#= key #>UL: goto <#= item.name.GetCorrespondingTrailer() #>; // <#= item #>
<#	}
}#>
				}
				goto default;
<# foreach (var (len, items) in array.MakeGroup()) { if (len <= 4) continue; #>
			case <#= len - 4 #>:
				switch (element4)
				{
<#	foreach (var (item, key, rest) in items) { #>
					case 0x<#= key #>UL when elementRest<# if (len == 5) { #>[0] == '<#= rest[0] #>'<# } else{ #>.SequenceEqual("<#= rest #>")<# } #>: goto <#= item.name.GetCorrespondingTrailer() #>; // <#= item.name #>
<#	} #>
				}
				goto default;
<#}#>			default: return Parse_Discard_DEFAULT(ref context, ref result, elementTokenId);
		}
<# foreach (var (type, outers) in array.MakeUsageGroup()) {
    foreach (var ((trailer, func), _) in outers) { #>
    <#= trailer #>: 
		return Parse_Discard_<#= trailer #>(ref context, ref result, elementTokenId);
<#  }
}#>
	}
}