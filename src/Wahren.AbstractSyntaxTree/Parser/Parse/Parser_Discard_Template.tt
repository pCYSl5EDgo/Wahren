<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Memory" #>
<#@ assembly name="NetStandard" #>
<#@ assembly name="$(t4LibFolder)\Wahren.AbstractSyntaxTree.TextTemplateHelper.dll" #>
<#@ assembly name="$(t4LibFolder)\Wahren.AbstractSyntaxTree.Basic.dll" #>
<#@ import namespace="Wahren.AbstractSyntaxTree" #>
<#@ import namespace="Wahren.AbstractSyntaxTree.TextTemplateHelper" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
#nullable enable
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY T4. DO NOT CHANGE IT. CHANGE THE .tt FILE INSTEAD.
// </auto-generated>
namespace Wahren.AbstractSyntaxTree.Parser;
<#
ElementInfo[] array = ElementInfo.Discards;
#>

public static partial class Parser
{
	public static bool Parse_Discard(ref Context context, ref Result result, uint elementTokenId, ulong hash)
	{
		switch (hash)
		{
<#	foreach (var (trailer, elementArray) in array.GroupBy(x => x.name.GetCorrespondingTrailer(), x => x, (hash, xs) => (hash, xs.ToArray()))) { #>
<#		foreach (var element in elementArray) { #>
			case 0x<#= StringHashUtility.Calc(element.name).ToString("X16") #>UL: // <#= element.name #>
<#		} #>
				return Parse_Discard_<#= trailer #>(ref context, ref result, elementTokenId);
<#	} #>
			default:
				return Parse_Discard_DEFAULT(ref context, ref result, elementTokenId);
		}
	}
}