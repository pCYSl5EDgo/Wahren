#nullable enable
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY T4. DO NOT CHANGE IT. CHANGE THE .tt FILE INSTEAD.
// </auto-generated>
namespace Wahren.AbstractSyntaxTree.Parser;

using Statement;

public static partial class Parser
{
    private static bool ParseScenario(ref Context context, ref Result result, out bool canContinue)
    {
        result.ScenarioNodeList.Add(new());
        ref var node = ref result.ScenarioNodeList.Last;
        ref var tokenList = ref result.TokenList;
        node.Kind = tokenList.LastIndex;
        canContinue = false;
        if (!ParseNameAndSuperAndBracketLeft(ref context, ref result, ref node, ref result.ScenarioSet))
        {
            return false;
        }

        var createErrorWarning = context.CreateError(DiagnosticSeverity.Warning);
        uint variant = uint.MaxValue;
        ref var source = ref result.Source;
        List<IBlockStatement> blockStack = new();
        ref var pair_Pair_NullableString_NullableIntElement = ref Unsafe.NullRef<Pair_NullableString_NullableIntElement?>();
        ref var pair_Pair_NullableString_NullableInt_ArrayElement = ref Unsafe.NullRef<Pair_NullableString_NullableInt_ArrayElement?>();
        ulong key = 0UL;
        do
        {
            if (!ReadUsefulToken(ref context, ref result))
            {
                result.ErrorAdd_BracketRightNotFound(node.Kind, node.Name);
                goto FALSE;
            }

            var currentIndex = tokenList.LastIndex;
            if (tokenList.Last.IsBracketRight(ref source))
            {
                node.BracketRight = currentIndex;
                blockStack.Dispose();
                canContinue = true;
                return true;
            }

            if (!ReadToken(ref context, ref result))
            {
                result.ErrorAdd_UnexpectedEndOfFile_AssignmentOrParenLeftIsExpected();
                goto FALSE;
            }

            if (!tokenList.Last.IsAssign(ref source))
            {
                if (tokenList.Last.IsParenLeft(ref source))
                {
                    if (Parse_RootBlock(ref context, ref result, currentIndex, ref node.Statements, ref blockStack))
                    {
                        continue;
                    }

                    goto FALSE;
                }

                result.ErrorAdd_UnexpectedOperatorToken(tokenList.LastIndex, "'=' or '(' is expected but not found.");
                goto FALSE;
            }

            if (!result.SplitElementPlain(currentIndex, out var span, out var variantSpan))
            {
                return false;
            }

            key = StringHashUtility.Calc(span);
            switch (span.Length)
            {
                case 3:
                    switch (key)
                    {
                        case 0x0000000000007731UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.map;
                            goto DEFAULT;
                    }
                    break;
                case 4:
                    switch (key)
                    {
                        case 0x000000000011FF91UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.name;
                            goto DEFAULT;
                        case 0x00000000000D71ADUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.help;
                            goto DEFAULT;
                        case 0x00000000001B90F0UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.zone;
                            goto DEFAULT;
                        case 0x000000000013D608UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableInt_ArrayElement = ref node.poli;
                            goto RAY;
                        case 0x0000000000097F1DUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableInt_ArrayElement = ref node.camp;
                            goto RAY;
                        case 0x00000000000E86BBUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableInt_ArrayElement = ref node.item;
                            goto MEMBER;
                        case 0x000000000016B9C9UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.text;
                            goto TEXT;
                        case 0x000000000015602FUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableInt_ArrayElement = ref node.roam;
                            goto ROAM;
                        case 0x0000000000162D72UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableInt_ArrayElement = ref node.spot;
                            goto ROAM;
                    }
                    break;
                case 5:
                    switch (key)
                    {
                        case 0x00000000014B311EUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.blind;
                            goto DEFAULT;
                        case 0x0000000003A63E51UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.world;
                            goto DEFAULT;
                        case 0x0000000001BB37CBUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.fight;
                            goto DEFAULT;
                        case 0x0000000002D33EE1UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.party;
                            goto DEFAULT;
                        case 0x0000000002197907UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.item0;
                            goto DEFAULT;
                        case 0x0000000002197908UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.item1;
                            goto DEFAULT;
                        case 0x0000000002197909UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.item2;
                            goto DEFAULT;
                        case 0x000000000219790AUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.item3;
                            goto DEFAULT;
                        case 0x000000000219790BUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.item4;
                            goto DEFAULT;
                        case 0x000000000219790CUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.item5;
                            goto DEFAULT;
                        case 0x000000000219790DUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.item6;
                            goto DEFAULT;
                        case 0x00000000028CC92CUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableInt_ArrayElement = ref node.multi;
                            goto RAY;
                        case 0x0000000002DE2982UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableInt_ArrayElement = ref node.power;
                            goto ROAM;
                    }
                    break;
                case 6:
                    switch (key)
                    {
                        case 0x0000000087807A86UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.ws_red;
                            goto DEFAULT;
                        case 0x0000000037D4068DUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.discus;
                            goto DEFAULT;
                        case 0x000000003C772DD9UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.enable;
                            goto DEFAULT;
                        case 0x0000000061DA50ABUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.nozone;
                            goto DEFAULT;
                        case 0x0000000064EBA9E9UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableInt_ArrayElement = ref node.offset;
                            goto OFFSET;
                    }
                    break;
                case 7:
                    switch (key)
                    {
                        case 0x0000001395857F80UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.ws_blue;
                            goto DEFAULT;
                        case 0x0000001120521284UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.sortkey;
                            goto DEFAULT;
                    }
                    break;
                case 8:
                    switch (key)
                    {
                        case 0x000002D49CDEB7EAUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.ws_green;
                            goto DEFAULT;
                        case 0x000002D49C2EBA4BUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.ws_alpha;
                            goto DEFAULT;
                        case 0x000002D49D66CB01UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.ws_light;
                            goto DEFAULT;
                        case 0x000001ECCA2E2BEDUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.max_unit;
                            goto DEFAULT;
                        case 0x000001DEB31A4A8BUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.locate_x;
                            goto DEFAULT;
                        case 0x000001DEB31A4A8CUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.locate_y;
                            goto DEFAULT;
                        case 0x0000023742B809ABUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.politics;
                            goto DEFAULT;
                        case 0x00000167EC769431UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.gain_per;
                            goto DEFAULT;
                        case 0x000001FB2BD0B92EUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.my_range;
                            goto DEFAULT;
                    }
                    break;
                case 9:
                    switch (key)
                    {
                        case 0x00005A628D182490UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.save_name;
                            goto DEFAULT;
                        case 0x0000210D16BE1074UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.actor_per;
                            goto DEFAULT;
                        case 0x00003C0A5AB67638UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableInt_ArrayElement = ref node.item_sale;
                            goto MEMBER;
                        case 0x00003C0A5AAE4096UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableInt_ArrayElement = ref node.item_hold;
                            goto MEMBER;
                    }
                    break;
                case 10:
                    switch (key)
                    {
                        case 0x00054257FFF04FC7UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.begin_text;
                            goto DEFAULT;
                        case 0x00053697CC71849CUL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.base_level;
                            goto DEFAULT;
                        case 0x0008AD7F1B9D1C73UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.item_limit;
                            goto DEFAULT;
                    }
                    break;
                case 11:
                    switch (key)
                    {
                        case 0x01FC05051A82F0A3UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.training_up;
                            goto DEFAULT;
                        case 0x01B692D6D9A99993UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.power_order;
                            goto DEFAULT;
                        case 0x01947483C793A533UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.no_autosave;
                            goto DEFAULT;
                    }
                    break;
                case 12:
                    switch (key)
                    {
                        case 0x4FBAA5928BD7F723UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.war_capacity;
                            goto DEFAULT;
                        case 0x389EDBEF16230D03UL:
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.myhelp_range;
                            goto DEFAULT;
                    }
                    break;
                case 13:
                    switch (key)
                    {
                        case 0x241EF2A6A38DA426UL when span[StringHashUtility.HashLengthMax] == 't':
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.enable_select;
                            goto DEFAULT;
                        case 0x46D912E164F20DD2UL when span[StringHashUtility.HashLengthMax] == 'y':
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.spot_capacity;
                            goto DEFAULT;
                        case 0x472EE6363A0D3FECUL when span[StringHashUtility.HashLengthMax] == 'e':
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.support_range;
                            goto DEFAULT;
                        case 0x37F6F8B3162AE17FUL when span[StringHashUtility.HashLengthMax] == 'l':
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.monster_level;
                            goto DEFAULT;
                        case 0x241EF2A6A3A725AEUL when span[StringHashUtility.HashLengthMax] == 't':
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.enable_talent;
                            goto DEFAULT;
                    }
                    break;
                case 14:
                    switch (key)
                    {
                        case 0x50F21EDB6A8618F1UL when span.Slice(StringHashUtility.HashLengthMax).SequenceEqual("ge"):
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.ws_light_range;
                            goto DEFAULT;
                        case 0x210F67ACA811C6DCUL when span.Slice(StringHashUtility.HashLengthMax).SequenceEqual("ng"):
                            if (variantSpan.Length != 0)
                            {
                                result.ErrorAdd_VariantNotAllowed(node.Kind, currentIndex);
                            }
                            variant = uint.MaxValue;
                            pair_Pair_NullableString_NullableIntElement = ref node.default_ending;
                            goto DEFAULT;
                    }
                    break;
            }

            if (Parse_Discard(ref context, ref result, currentIndex, key))
            {
                result.ErrorAdd_UnexpectedElementName(node.Kind, currentIndex);
                continue;
            }
            else
            {
                goto FALSE;
            }

        DEFAULT:
            if (pair_Pair_NullableString_NullableIntElement is null)
            {
                pair_Pair_NullableString_NullableIntElement = new(currentIndex);
                pair_Pair_NullableString_NullableIntElement.ElementScenarioId = variant;
                pair_Pair_NullableString_NullableIntElement.ElementKeyRange.Length = (uint)span.Length;
                {
                    ref var start = ref tokenList[currentIndex].Position;
                    pair_Pair_NullableString_NullableIntElement.ElementKeyRange.Line = start.Line;
                    pair_Pair_NullableString_NullableIntElement.ElementKeyRange.Offset = start.Offset;
                }
                if (Parse_Element_DEFAULT(ref context, ref result, pair_Pair_NullableString_NullableIntElement))
                {
                    continue;
                }
                else
                {
                    goto FALSE;
                }
            }

            if (createErrorWarning)
            {
                result.WarningAdd_MultipleAssignment(currentIndex);
            }

            if (Parse_Discard_DEFAULT(ref context, ref result, currentIndex))
            {
                continue;
            }
            else
            {
                goto FALSE;
            }
        TEXT:
            if (pair_Pair_NullableString_NullableIntElement is null)
            {
                pair_Pair_NullableString_NullableIntElement = new(currentIndex);
                pair_Pair_NullableString_NullableIntElement.ElementScenarioId = variant;
                pair_Pair_NullableString_NullableIntElement.ElementKeyRange.Length = (uint)span.Length;
                {
                    ref var start = ref tokenList[currentIndex].Position;
                    pair_Pair_NullableString_NullableIntElement.ElementKeyRange.Line = start.Line;
                    pair_Pair_NullableString_NullableIntElement.ElementKeyRange.Offset = start.Offset;
                }
                if (Parse_Element_TEXT(ref context, ref result, pair_Pair_NullableString_NullableIntElement))
                {
                    continue;
                }
                else
                {
                    goto FALSE;
                }
            }

            if (createErrorWarning)
            {
                result.WarningAdd_MultipleAssignment(currentIndex);
            }

            if (Parse_Discard_TEXT(ref context, ref result, currentIndex))
            {
                continue;
            }
            else
            {
                goto FALSE;
            }
        RAY:
            if (pair_Pair_NullableString_NullableInt_ArrayElement is null)
            {
                pair_Pair_NullableString_NullableInt_ArrayElement = new(currentIndex);
                pair_Pair_NullableString_NullableInt_ArrayElement.ElementScenarioId = variant;
                pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Length = (uint)span.Length;
                {
                    ref var start = ref tokenList[currentIndex].Position;
                    pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Line = start.Line;
                    pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Offset = start.Offset;
                }
                if (Parse_Element_RAY(ref context, ref result, pair_Pair_NullableString_NullableInt_ArrayElement))
                {
                    continue;
                }
                else
                {
                    goto FALSE;
                }
            }

            if (createErrorWarning)
            {
                result.WarningAdd_MultipleAssignment(currentIndex);
            }

            if (Parse_Discard_RAY(ref context, ref result, currentIndex))
            {
                continue;
            }
            else
            {
                goto FALSE;
            }
        MEMBER:
            if (pair_Pair_NullableString_NullableInt_ArrayElement is null)
            {
                pair_Pair_NullableString_NullableInt_ArrayElement = new(currentIndex);
                pair_Pair_NullableString_NullableInt_ArrayElement.ElementScenarioId = variant;
                pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Length = (uint)span.Length;
                {
                    ref var start = ref tokenList[currentIndex].Position;
                    pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Line = start.Line;
                    pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Offset = start.Offset;
                }
                if (Parse_Element_MEMBER(ref context, ref result, pair_Pair_NullableString_NullableInt_ArrayElement))
                {
                    continue;
                }
                else
                {
                    goto FALSE;
                }
            }

            if (createErrorWarning)
            {
                result.WarningAdd_MultipleAssignment(currentIndex);
            }

            if (Parse_Discard_MEMBER(ref context, ref result, currentIndex))
            {
                continue;
            }
            else
            {
                goto FALSE;
            }
        ROAM:
            if (pair_Pair_NullableString_NullableInt_ArrayElement is null)
            {
                pair_Pair_NullableString_NullableInt_ArrayElement = new(currentIndex);
                pair_Pair_NullableString_NullableInt_ArrayElement.ElementScenarioId = variant;
                pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Length = (uint)span.Length;
                {
                    ref var start = ref tokenList[currentIndex].Position;
                    pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Line = start.Line;
                    pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Offset = start.Offset;
                }
                if (Parse_Element_ROAM(ref context, ref result, pair_Pair_NullableString_NullableInt_ArrayElement))
                {
                    continue;
                }
                else
                {
                    goto FALSE;
                }
            }

            if (createErrorWarning)
            {
                result.WarningAdd_MultipleAssignment(currentIndex);
            }

            if (Parse_Discard_ROAM(ref context, ref result, currentIndex))
            {
                continue;
            }
            else
            {
                goto FALSE;
            }
        OFFSET:
            if (pair_Pair_NullableString_NullableInt_ArrayElement is null)
            {
                pair_Pair_NullableString_NullableInt_ArrayElement = new(currentIndex);
                pair_Pair_NullableString_NullableInt_ArrayElement.ElementScenarioId = variant;
                pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Length = (uint)span.Length;
                {
                    ref var start = ref tokenList[currentIndex].Position;
                    pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Line = start.Line;
                    pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Offset = start.Offset;
                }
                if (Parse_Element_OFFSET(ref context, ref result, pair_Pair_NullableString_NullableInt_ArrayElement))
                {
                    continue;
                }
                else
                {
                    goto FALSE;
                }
            }

            if (createErrorWarning)
            {
                result.WarningAdd_MultipleAssignment(currentIndex);
            }

            if (Parse_Discard_OFFSET(ref context, ref result, currentIndex))
            {
                continue;
            }
            else
            {
                goto FALSE;
            }
        } while (true);

    FALSE:
        blockStack.Dispose();
        return false;
    }
    private static bool ParseEvent(ref Context context, ref Result result, out bool canContinue)
    {
        result.EventNodeList.Add(new());
        ref var node = ref result.EventNodeList.Last;
        ref var tokenList = ref result.TokenList;
        node.Kind = tokenList.LastIndex;
        canContinue = false;
        if (!ParseNameAndSuperAndBracketLeft(ref context, ref result, ref node, ref result.EventSet))
        {
            return false;
        }

        var createErrorWarning = context.CreateError(DiagnosticSeverity.Warning);
        uint variant = uint.MaxValue;
        ref var source = ref result.Source;
        List<IBlockStatement> blockStack = new();
        ref var pair_Pair_NullableString_NullableIntElement = ref Unsafe.NullRef<Pair_NullableString_NullableIntElement?>();
        ref var pair_Pair_NullableString_NullableInt_ArrayElement = ref Unsafe.NullRef<Pair_NullableString_NullableInt_ArrayElement?>();
        ulong key = 0UL;
        do
        {
            if (!ReadUsefulToken(ref context, ref result))
            {
                result.ErrorAdd_BracketRightNotFound(node.Kind, node.Name);
                goto FALSE;
            }

            var currentIndex = tokenList.LastIndex;
            if (tokenList.Last.IsBracketRight(ref source))
            {
                node.BracketRight = currentIndex;
                blockStack.Dispose();
                canContinue = true;
                return true;
            }

            if (!ReadToken(ref context, ref result))
            {
                result.ErrorAdd_UnexpectedEndOfFile_AssignmentOrParenLeftIsExpected();
                goto FALSE;
            }

            if (!tokenList.Last.IsAssign(ref source))
            {
                if (tokenList.Last.IsParenLeft(ref source))
                {
                    if (Parse_RootBlock(ref context, ref result, currentIndex, ref node.Statements, ref blockStack))
                    {
                        continue;
                    }

                    goto FALSE;
                }
                else if (tokenList.Last.IsBracketLeft(ref source) && result.GetSpan(currentIndex).SequenceEqual("battle"))
                {
                    NextStatement? nextStatement = null;
                    foreach (ref var statement in node.Statements)
                    {
                        if ((nextStatement = statement as NextStatement) is not null)
                        {
                            break;
                        }
                    }

                    if (nextStatement is null)
                    {
                        result.ErrorAdd_CoresspondingNextDoesNotExist(currentIndex);
                    }

                    var battleStatement = new BattleStatement(currentIndex, nextStatement);
                    tokenList[currentIndex].Kind = TokenKind.battle;
                    blockStack.Add(battleStatement);
                    var answer = Parse_Block(ref context, ref result, ref battleStatement.Statements, ref blockStack);
                    blockStack.RemoveLast();
                    if (answer)
                    {
                        continue;
                    }

                    goto FALSE;
                }

                result.ErrorAdd_UnexpectedOperatorToken(tokenList.LastIndex, "'=' or '(' is expected but not found.");
                goto FALSE;
            }

            if (!result.SplitElement(currentIndex, out var span, out variant))
            {
                return false;
            }

            key = StringHashUtility.Calc(span);
            switch (span.Length)
            {
                case 1:
                    switch (key)
                    {
                        case 0x0000000000000020UL:
                            pair_Pair_NullableString_NullableIntElement = ref node.w.EnsureGet(variant);
                            goto DEFAULT;
                        case 0x0000000000000011UL:
                            pair_Pair_NullableString_NullableIntElement = ref node.h.EnsureGet(variant);
                            goto DEFAULT;
                    }
                    break;
                case 2:
                    switch (key)
                    {
                        case 0x00000000000001A7UL:
                            pair_Pair_NullableString_NullableIntElement = ref node.bg.EnsureGet(variant);
                            goto DEFAULT;
                    }
                    break;
                case 3:
                    switch (key)
                    {
                        case 0x0000000000003C9FUL:
                            pair_Pair_NullableString_NullableIntElement = ref node.bcg.EnsureGet(variant);
                            goto DEFAULT;
                        case 0x0000000000003D39UL:
                            pair_Pair_NullableString_NullableIntElement = ref node.bgm.EnsureGet(variant);
                            goto DEFAULT;
                        case 0x0000000000007731UL:
                            pair_Pair_NullableString_NullableIntElement = ref node.map.EnsureGet(variant);
                            goto DEFAULT;
                    }
                    break;
                case 4:
                    switch (key)
                    {
                        case 0x000000000011FF91UL:
                            pair_Pair_NullableString_NullableIntElement = ref node.name.EnsureGet(variant);
                            goto DEFAULT;
                        case 0x000000000016098BUL:
                            pair_Pair_NullableString_NullableIntElement = ref node.size.EnsureGet(variant);
                            goto DEFAULT;
                    }
                    break;
                case 5:
                    switch (key)
                    {
                        case 0x00000000014B311EUL:
                            pair_Pair_NullableString_NullableIntElement = ref node.blind.EnsureGet(variant);
                            goto DEFAULT;
                        case 0x00000000016A2BE4UL:
                            pair_Pair_NullableString_NullableInt_ArrayElement = ref node.color.EnsureGet(variant);
                            goto RAY;
                        case 0x00000000014B4FA4UL:
                            pair_Pair_NullableString_NullableIntElement = ref node.block.EnsureGet(variant);
                            goto DEFAULT;
                        case 0x000000000266EDACUL:
                            pair_Pair_NullableString_NullableIntElement = ref node.limit.EnsureGet(variant);
                            goto DEFAULT;
                        case 0x00000000034BDB03UL:
                            pair_Pair_NullableString_NullableIntElement = ref node.title.EnsureGet(variant);
                            goto DEFAULT;
                    }
                    break;
                case 6:
                    switch (key)
                    {
                        case 0x0000000032CD7DBEUL:
                            pair_Pair_NullableString_NullableIntElement = ref node.castle.EnsureGet(variant);
                            goto DEFAULT;
                        case 0x00000000333C033BUL:
                            pair_Pair_NullableString_NullableIntElement = ref node.center.EnsureGet(variant);
                            goto DEFAULT;
                        case 0x000000004DAB63DCUL:
                            pair_Pair_NullableString_NullableIntElement = ref node.italic.EnsureGet(variant);
                            goto DEFAULT;
                        case 0x000000004773D106UL:
                            pair_Pair_NullableString_NullableIntElement = ref node.handle.EnsureGet(variant);
                            goto DEFAULT;
                        case 0x000000005C8FE96EUL:
                            pair_Pair_NullableString_NullableInt_ArrayElement = ref node.member.EnsureGet(variant);
                            goto MEMBER;
                        case 0x000000007555168EUL:
                            pair_Pair_NullableString_NullableIntElement = ref node.second.EnsureGet(variant);
                            goto DEFAULT;
                        case 0x0000000082E0752EUL:
                            pair_Pair_NullableString_NullableIntElement = ref node.volume.EnsureGet(variant);
                            goto DEFAULT;
                    }
                    break;
                case 7:
                    switch (key)
                    {
                        case 0x00000006D86BA733UL:
                            pair_Pair_NullableString_NullableIntElement = ref node.bg_fade.EnsureGet(variant);
                            goto DEFAULT;
                    }
                    break;
                case 8:
                    switch (key)
                    {
                        case 0x0000012A8E3E6D33UL:
                            pair_Pair_NullableString_NullableIntElement = ref node.disperse.EnsureGet(variant);
                            goto DEFAULT;
                    }
                    break;
                case 9:
                    switch (key)
                    {
                        case 0x00002A7510CCF706UL:
                            pair_Pair_NullableString_NullableIntElement = ref node.dark_fade.EnsureGet(variant);
                            goto DEFAULT;
                    }
                    break;
                case 10:
                    switch (key)
                    {
                        case 0x000622EB6D19784DUL:
                            pair_Pair_NullableString_NullableIntElement = ref node.dark_alpha.EnsureGet(variant);
                            goto DEFAULT;
                    }
                    break;
                case 11:
                    switch (key)
                    {
                        case 0x00C3C30247A2C34CUL:
                            pair_Pair_NullableString_NullableIntElement = ref node.bg_interval.EnsureGet(variant);
                            goto DEFAULT;
                        case 0x00E30C06D8150458UL:
                            pair_Pair_NullableString_NullableIntElement = ref node.dark_fade_e.EnsureGet(variant);
                            goto DEFAULT;
                        case 0x016BBB0E26E654C6UL:
                            pair_Pair_NullableString_NullableIntElement = ref node.last_second.EnsureGet(variant);
                            goto DEFAULT;
                    }
                    break;
                case 13:
                    switch (key)
                    {
                        case 0x1E5937828052AC7AUL when span[StringHashUtility.HashLengthMax] == 'e':
                            pair_Pair_NullableString_NullableIntElement = ref node.castle_battle.EnsureGet(variant);
                            goto DEFAULT;
                    }
                    break;
            }

            if (Parse_Discard(ref context, ref result, currentIndex, key))
            {
                result.ErrorAdd_UnexpectedElementName(node.Kind, currentIndex);
                continue;
            }
            else
            {
                goto FALSE;
            }

        DEFAULT:
            if (pair_Pair_NullableString_NullableIntElement is null)
            {
                pair_Pair_NullableString_NullableIntElement = new(currentIndex);
                pair_Pair_NullableString_NullableIntElement.ElementScenarioId = variant;
                pair_Pair_NullableString_NullableIntElement.ElementKeyRange.Length = (uint)span.Length;
                {
                    ref var start = ref tokenList[currentIndex].Position;
                    pair_Pair_NullableString_NullableIntElement.ElementKeyRange.Line = start.Line;
                    pair_Pair_NullableString_NullableIntElement.ElementKeyRange.Offset = start.Offset;
                }
                if (Parse_Element_DEFAULT(ref context, ref result, pair_Pair_NullableString_NullableIntElement))
                {
                    continue;
                }
                else
                {
                    goto FALSE;
                }
            }

            if (createErrorWarning)
            {
                result.WarningAdd_MultipleAssignment(currentIndex);
            }

            if (Parse_Discard_DEFAULT(ref context, ref result, currentIndex))
            {
                continue;
            }
            else
            {
                goto FALSE;
            }
        RAY:
            if (pair_Pair_NullableString_NullableInt_ArrayElement is null)
            {
                pair_Pair_NullableString_NullableInt_ArrayElement = new(currentIndex);
                pair_Pair_NullableString_NullableInt_ArrayElement.ElementScenarioId = variant;
                pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Length = (uint)span.Length;
                {
                    ref var start = ref tokenList[currentIndex].Position;
                    pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Line = start.Line;
                    pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Offset = start.Offset;
                }
                if (Parse_Element_RAY(ref context, ref result, pair_Pair_NullableString_NullableInt_ArrayElement))
                {
                    continue;
                }
                else
                {
                    goto FALSE;
                }
            }

            if (createErrorWarning)
            {
                result.WarningAdd_MultipleAssignment(currentIndex);
            }

            if (Parse_Discard_RAY(ref context, ref result, currentIndex))
            {
                continue;
            }
            else
            {
                goto FALSE;
            }
        MEMBER:
            if (pair_Pair_NullableString_NullableInt_ArrayElement is null)
            {
                pair_Pair_NullableString_NullableInt_ArrayElement = new(currentIndex);
                pair_Pair_NullableString_NullableInt_ArrayElement.ElementScenarioId = variant;
                pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Length = (uint)span.Length;
                {
                    ref var start = ref tokenList[currentIndex].Position;
                    pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Line = start.Line;
                    pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Offset = start.Offset;
                }
                if (Parse_Element_MEMBER(ref context, ref result, pair_Pair_NullableString_NullableInt_ArrayElement))
                {
                    continue;
                }
                else
                {
                    goto FALSE;
                }
            }

            if (createErrorWarning)
            {
                result.WarningAdd_MultipleAssignment(currentIndex);
            }

            if (Parse_Discard_MEMBER(ref context, ref result, currentIndex))
            {
                continue;
            }
            else
            {
                goto FALSE;
            }
        } while (true);

    FALSE:
        blockStack.Dispose();
        return false;
    }
    private static bool ParseStory(ref Context context, ref Result result, out bool canContinue)
    {
        result.StoryNodeList.Add(new());
        ref var node = ref result.StoryNodeList.Last;
        ref var tokenList = ref result.TokenList;
        node.Kind = tokenList.LastIndex;
        canContinue = false;
        if (!ParseNameAndSuperAndBracketLeft(ref context, ref result, ref node, ref result.StorySet))
        {
            return false;
        }

        var createErrorWarning = context.CreateError(DiagnosticSeverity.Warning);
        uint variant = uint.MaxValue;
        ref var source = ref result.Source;
        List<IBlockStatement> blockStack = new();
        ref var pair_Pair_NullableString_NullableInt_ArrayElement = ref Unsafe.NullRef<Pair_NullableString_NullableInt_ArrayElement?>();
        ref var pair_Pair_NullableString_NullableIntElement = ref Unsafe.NullRef<Pair_NullableString_NullableIntElement?>();
        ulong key = 0UL;
        do
        {
            if (!ReadUsefulToken(ref context, ref result))
            {
                result.ErrorAdd_BracketRightNotFound(node.Kind, node.Name);
                goto FALSE;
            }

            var currentIndex = tokenList.LastIndex;
            if (tokenList.Last.IsBracketRight(ref source))
            {
                node.BracketRight = currentIndex;
                blockStack.Dispose();
                canContinue = true;
                return true;
            }

            if (!ReadToken(ref context, ref result))
            {
                result.ErrorAdd_UnexpectedEndOfFile_AssignmentOrParenLeftIsExpected();
                goto FALSE;
            }

            if (!tokenList.Last.IsAssign(ref source))
            {
                if (tokenList.Last.IsParenLeft(ref source))
                {
                    if (Parse_RootBlock(ref context, ref result, currentIndex, ref node.Statements, ref blockStack))
                    {
                        continue;
                    }

                    goto FALSE;
                }

                result.ErrorAdd_UnexpectedOperatorToken(tokenList.LastIndex, "'=' or '(' is expected but not found.");
                goto FALSE;
            }

            if (!result.SplitElement(currentIndex, out var span, out variant))
            {
                return false;
            }

            key = StringHashUtility.Calc(span);
            switch (span.Length)
            {
                case 5:
                    switch (key)
                    {
                        case 0x0000000001BB37CBUL:
                            pair_Pair_NullableString_NullableIntElement = ref node.fight.EnsureGet(variant);
                            goto DEFAULT;
                    }
                    break;
                case 6:
                    switch (key)
                    {
                        case 0x000000004111EBAEUL:
                            pair_Pair_NullableString_NullableInt_ArrayElement = ref node.friend.EnsureGet(variant);
                            goto OFFSET;
                    }
                    break;
            }

            if (Parse_Discard(ref context, ref result, currentIndex, key))
            {
                result.ErrorAdd_UnexpectedElementName(node.Kind, currentIndex);
                continue;
            }
            else
            {
                goto FALSE;
            }

        OFFSET:
            if (pair_Pair_NullableString_NullableInt_ArrayElement is null)
            {
                pair_Pair_NullableString_NullableInt_ArrayElement = new(currentIndex);
                pair_Pair_NullableString_NullableInt_ArrayElement.ElementScenarioId = variant;
                pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Length = (uint)span.Length;
                {
                    ref var start = ref tokenList[currentIndex].Position;
                    pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Line = start.Line;
                    pair_Pair_NullableString_NullableInt_ArrayElement.ElementKeyRange.Offset = start.Offset;
                }
                if (Parse_Element_OFFSET(ref context, ref result, pair_Pair_NullableString_NullableInt_ArrayElement))
                {
                    continue;
                }
                else
                {
                    goto FALSE;
                }
            }

            if (createErrorWarning)
            {
                result.WarningAdd_MultipleAssignment(currentIndex);
            }

            if (Parse_Discard_OFFSET(ref context, ref result, currentIndex))
            {
                continue;
            }
            else
            {
                goto FALSE;
            }
        DEFAULT:
            if (pair_Pair_NullableString_NullableIntElement is null)
            {
                pair_Pair_NullableString_NullableIntElement = new(currentIndex);
                pair_Pair_NullableString_NullableIntElement.ElementScenarioId = variant;
                pair_Pair_NullableString_NullableIntElement.ElementKeyRange.Length = (uint)span.Length;
                {
                    ref var start = ref tokenList[currentIndex].Position;
                    pair_Pair_NullableString_NullableIntElement.ElementKeyRange.Line = start.Line;
                    pair_Pair_NullableString_NullableIntElement.ElementKeyRange.Offset = start.Offset;
                }
                if (Parse_Element_DEFAULT(ref context, ref result, pair_Pair_NullableString_NullableIntElement))
                {
                    continue;
                }
                else
                {
                    goto FALSE;
                }
            }

            if (createErrorWarning)
            {
                result.WarningAdd_MultipleAssignment(currentIndex);
            }

            if (Parse_Discard_DEFAULT(ref context, ref result, currentIndex))
            {
                continue;
            }
            else
            {
                goto FALSE;
            }
        } while (true);

    FALSE:
        blockStack.Dispose();
        return false;
    }
}
